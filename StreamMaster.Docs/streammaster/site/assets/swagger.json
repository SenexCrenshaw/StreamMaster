{
  "x-generator": "NSwag v14.1.0.0 (NJsonSchema v11.0.2.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "StreamMaster API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://10.3.10.21:7095"
    }
  ],
  "paths": {
    "/api/files/{filetype}/{source}": {
      "get": {
        "tags": [
          "Files"
        ],
        "operationId": "Files_GetFile",
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "filetype",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SMFileTypes"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/misc/getdownloadservicestatus": {
      "get": {
        "tags": [
          "Misc"
        ],
        "operationId": "Misc_GetDownloadServiceStatus",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageDownloadServiceStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/misc/getchanneldigetchanneldistributors": {
      "get": {
        "tags": [
          "Misc"
        ],
        "operationId": "Misc_GetChannelDiGetChannelDistributors",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SourceBroadcaster"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/misc/cachesmchannelicons": {
      "get": {
        "tags": [
          "Misc"
        ],
        "operationId": "Misc_CacheSMChannelIcons",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/misc/getaggregatedmetrics": {
      "get": {
        "tags": [
          "Misc"
        ],
        "operationId": "Misc_GetAggregatedMetrics",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/IStreamHandlerMetrics"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/misc/gettestm3u": {
      "get": {
        "tags": [
          "Misc"
        ],
        "operationId": "Misc_GetTestM3U",
        "parameters": [
          {
            "name": "numberOfStreams",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/misc/gettestepg": {
      "get": {
        "tags": [
          "Misc"
        ],
        "operationId": "Misc_GetTestEPG",
        "parameters": [
          {
            "name": "NumberOfChannels",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "NumberOfDays",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/misc/backup": {
      "put": {
        "tags": [
          "Misc"
        ],
        "operationId": "Misc_Backup",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/s/{streamGroupProfileId}": {
      "get": {
        "tags": [
          "Ss"
        ],
        "operationId": "Ss_GetStreamGroupCapability",
        "parameters": [
          {
            "name": "streamGroupProfileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/s/{streamGroupProfileId}/capability": {
      "get": {
        "tags": [
          "Ss"
        ],
        "operationId": "Ss_GetStreamGroupCapability2",
        "parameters": [
          {
            "name": "streamGroupProfileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/s/{streamGroupProfileId}/device.xml": {
      "get": {
        "tags": [
          "Ss"
        ],
        "operationId": "Ss_GetStreamGroupCapability3",
        "parameters": [
          {
            "name": "streamGroupProfileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/s/{streamGroupProfileId}/discover.json": {
      "get": {
        "tags": [
          "Ss"
        ],
        "operationId": "Ss_GetStreamGroupDiscover",
        "parameters": [
          {
            "name": "streamGroupProfileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/s/{streamGroupProfileId}/lineup.json": {
      "get": {
        "tags": [
          "Ss"
        ],
        "operationId": "Ss_GetStreamGroupLineup",
        "parameters": [
          {
            "name": "streamGroupProfileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/s/{streamGroupProfileId}/lineup_status.json": {
      "get": {
        "tags": [
          "Ss"
        ],
        "operationId": "Ss_GetStreamGroupLineupStatus",
        "parameters": [
          {
            "name": "streamGroupProfileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/s/{streamGroupProfileId}/epg.xml": {
      "get": {
        "tags": [
          "Ss"
        ],
        "operationId": "Ss_GetStreamGroupEPG",
        "parameters": [
          {
            "name": "streamGroupProfileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/s/{streamGroupProfileId}.xml": {
      "get": {
        "tags": [
          "Ss"
        ],
        "operationId": "Ss_GetStreamGroupEPG2",
        "parameters": [
          {
            "name": "streamGroupProfileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/s/{streamGroupProfileId}/m3u.m3u": {
      "get": {
        "tags": [
          "Ss"
        ],
        "operationId": "Ss_GetStreamGroupM3U",
        "parameters": [
          {
            "name": "streamGroupProfileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/s/{streamGroupProfileId}.m3u": {
      "get": {
        "tags": [
          "Ss"
        ],
        "operationId": "Ss_GetStreamGroupM3U2",
        "parameters": [
          {
            "name": "streamGroupProfileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/s/{streamGroupProfileId}/auto/v{channelNumber}": {
      "get": {
        "tags": [
          "Ss"
        ],
        "operationId": "Ss_GetAutoStream",
        "parameters": [
          {
            "name": "streamGroupProfileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "channelNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/test/scandirectoryform3ufiles": {
      "put": {
        "tags": [
          "Test"
        ],
        "operationId": "Test_ScanDirectoryForM3UFiles",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/test/addtesttask": {
      "put": {
        "tags": [
          "Test"
        ],
        "operationId": "Test_AddTestTask",
        "parameters": [
          {
            "name": "DelayInSeconds",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/test/setsystemready": {
      "put": {
        "tags": [
          "Test"
        ],
        "operationId": "Test_SetSystemReady",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetIsSystemReadyRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/test/updatechannelgroupcountsrequest": {
      "put": {
        "tags": [
          "Test"
        ],
        "operationId": "Test_UpdateChannelGroupCountsRequest",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/v/{smChannelId}": {
      "get": {
        "tags": [
          "Vs"
        ],
        "operationId": "Vs_GetVideoStreamStreamGET",
        "parameters": [
          {
            "name": "smChannelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      },
      "head": {
        "tags": [
          "Vs"
        ],
        "operationId": "Vs_GetVideoStreamStreamHEAD",
        "parameters": [
          {
            "name": "smChannelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/v/{smChannelId}.ts": {
      "get": {
        "tags": [
          "Vs"
        ],
        "operationId": "Vs_GetVideoStreamStreamGET2",
        "parameters": [
          {
            "name": "smChannelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      },
      "head": {
        "tags": [
          "Vs"
        ],
        "operationId": "Vs_GetVideoStreamStreamHEAD2",
        "parameters": [
          {
            "name": "smChannelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/v/{streamGroupProfileId}/{smChannelId}": {
      "get": {
        "tags": [
          "Vs"
        ],
        "operationId": "Vs_GetVideoStreamStreamGET3",
        "parameters": [
          {
            "name": "smChannelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "streamGroupProfileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      },
      "head": {
        "tags": [
          "Vs"
        ],
        "operationId": "Vs_GetVideoStreamStreamHEAD3",
        "parameters": [
          {
            "name": "smChannelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "streamGroupProfileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/v/{streamGroupProfileId}/{smChannelId}.ts": {
      "get": {
        "tags": [
          "Vs"
        ],
        "operationId": "Vs_GetVideoStreamStreamGET4",
        "parameters": [
          {
            "name": "smChannelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "streamGroupProfileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      },
      "head": {
        "tags": [
          "Vs"
        ],
        "operationId": "Vs_GetVideoStreamStreamHEAD4",
        "parameters": [
          {
            "name": "smChannelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "streamGroupProfileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/videostreams/stream/{encodedIds}": {
      "get": {
        "tags": [
          "VideoStreams"
        ],
        "operationId": "VideoStreams_GetVideoStreamStreamGET",
        "parameters": [
          {
            "name": "encodedIds",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      },
      "head": {
        "tags": [
          "VideoStreams"
        ],
        "operationId": "VideoStreams_GetVideoStreamStreamHEAD",
        "parameters": [
          {
            "name": "encodedIds",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/videostreams/stream/{encodedIds}.mp4": {
      "get": {
        "tags": [
          "VideoStreams"
        ],
        "operationId": "VideoStreams_GetVideoStreamStreamGET2",
        "parameters": [
          {
            "name": "encodedIds",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      },
      "head": {
        "tags": [
          "VideoStreams"
        ],
        "operationId": "VideoStreams_GetVideoStreamStreamHEAD2",
        "parameters": [
          {
            "name": "encodedIds",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/videostreams/stream/{encodedIds}.ts": {
      "get": {
        "tags": [
          "VideoStreams"
        ],
        "operationId": "VideoStreams_GetVideoStreamStreamGET3",
        "parameters": [
          {
            "name": "encodedIds",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      },
      "head": {
        "tags": [
          "VideoStreams"
        ],
        "operationId": "VideoStreams_GetVideoStreamStreamHEAD3",
        "parameters": [
          {
            "name": "encodedIds",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/videostreams/stream/{encodedIds}/{name}": {
      "get": {
        "tags": [
          "VideoStreams"
        ],
        "operationId": "VideoStreams_GetVideoStreamStreamGET4",
        "parameters": [
          {
            "name": "encodedIds",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      },
      "head": {
        "tags": [
          "VideoStreams"
        ],
        "operationId": "VideoStreams_GetVideoStreamStreamHEAD4",
        "parameters": [
          {
            "name": "encodedIds",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/vs/getvs": {
      "get": {
        "tags": [
          "Vs"
        ],
        "operationId": "Vs_GetVs",
        "parameters": [
          {
            "name": "StreamGroupId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "StreamGroupProfileId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/V"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/streaming/cancelallchannels": {
      "patch": {
        "tags": [
          "Streaming"
        ],
        "operationId": "Streaming_CancelAllChannels",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/streaming/cancelchannel": {
      "patch": {
        "tags": [
          "Streaming"
        ],
        "operationId": "Streaming_CancelChannel",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelChannelRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/streaming/cancelclient": {
      "patch": {
        "tags": [
          "Streaming"
        ],
        "operationId": "Streaming_CancelClient",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelClientRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/streaming/movetonextstream": {
      "patch": {
        "tags": [
          "Streaming"
        ],
        "operationId": "Streaming_MoveToNextStream",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveToNextStreamRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/streamgroupsmchannellinks/getstreamgroupsmchannels": {
      "get": {
        "tags": [
          "StreamGroupSMChannelLinks"
        ],
        "operationId": "StreamGroupSMChannelLinks_GetStreamGroupSMChannels",
        "parameters": [
          {
            "name": "StreamGroupId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SMChannelDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/streamgroupsmchannellinks/addsmchannelstostreamgroupbyparameters": {
      "patch": {
        "tags": [
          "StreamGroupSMChannelLinks"
        ],
        "operationId": "StreamGroupSMChannelLinks_AddSMChannelsToStreamGroupByParameters",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddSMChannelsToStreamGroupByParametersRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/streamgroupsmchannellinks/addsmchannelstostreamgroup": {
      "patch": {
        "tags": [
          "StreamGroupSMChannelLinks"
        ],
        "operationId": "StreamGroupSMChannelLinks_AddSMChannelsToStreamGroup",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddSMChannelsToStreamGroupRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/streamgroupsmchannellinks/addsmchanneltostreamgroup": {
      "patch": {
        "tags": [
          "StreamGroupSMChannelLinks"
        ],
        "operationId": "StreamGroupSMChannelLinks_AddSMChannelToStreamGroup",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddSMChannelToStreamGroupRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/streamgroupsmchannellinks/removesmchannelfromstreamgroup": {
      "delete": {
        "tags": [
          "StreamGroupSMChannelLinks"
        ],
        "operationId": "StreamGroupSMChannelLinks_RemoveSMChannelFromStreamGroup",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveSMChannelFromStreamGroupRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/streamgroups/getpagedstreamgroups": {
      "get": {
        "tags": [
          "StreamGroups"
        ],
        "operationId": "StreamGroups_GetPagedStreamGroups",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 3
          },
          {
            "name": "JSONArgumentString",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "JSONFiltersString",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponseOfStreamGroupDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/streamgroups/getstreamgroupprofiles": {
      "get": {
        "tags": [
          "StreamGroups"
        ],
        "operationId": "StreamGroups_GetStreamGroupProfiles",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StreamGroupProfile"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/streamgroups/getstreamgroup": {
      "get": {
        "tags": [
          "StreamGroups"
        ],
        "operationId": "StreamGroups_GetStreamGroup",
        "parameters": [
          {
            "name": "SGName",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StreamGroupDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/streamgroups/getstreamgroups": {
      "get": {
        "tags": [
          "StreamGroups"
        ],
        "operationId": "StreamGroups_GetStreamGroups",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StreamGroupDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/streamgroups/addprofiletostreamgroup": {
      "patch": {
        "tags": [
          "StreamGroups"
        ],
        "operationId": "StreamGroups_AddProfileToStreamGroup",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddProfileToStreamGroupRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/streamgroups/createstreamgroup": {
      "post": {
        "tags": [
          "StreamGroups"
        ],
        "operationId": "StreamGroups_CreateStreamGroup",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStreamGroupRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/streamgroups/deletestreamgroup": {
      "delete": {
        "tags": [
          "StreamGroups"
        ],
        "operationId": "StreamGroups_DeleteStreamGroup",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteStreamGroupRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/streamgroups/removestreamgroupprofile": {
      "delete": {
        "tags": [
          "StreamGroups"
        ],
        "operationId": "StreamGroups_RemoveStreamGroupProfile",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveStreamGroupProfileRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/streamgroups/updatestreamgroupprofile": {
      "patch": {
        "tags": [
          "StreamGroups"
        ],
        "operationId": "StreamGroups_UpdateStreamGroupProfile",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStreamGroupProfileRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/streamgroups/updatestreamgroup": {
      "patch": {
        "tags": [
          "StreamGroups"
        ],
        "operationId": "StreamGroups_UpdateStreamGroup",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStreamGroupRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/streamgroups/{encodedId}": {
      "get": {
        "tags": [
          "StreamGroups"
        ],
        "operationId": "StreamGroups_GetStreamGroupCapability",
        "parameters": [
          {
            "name": "encodedId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/streamgroups/{encodedId}/capability": {
      "get": {
        "tags": [
          "StreamGroups"
        ],
        "operationId": "StreamGroups_GetStreamGroupCapability2",
        "parameters": [
          {
            "name": "encodedId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/streamgroups/{encodedId}/device.xml": {
      "get": {
        "tags": [
          "StreamGroups"
        ],
        "operationId": "StreamGroups_GetStreamGroupCapability3",
        "parameters": [
          {
            "name": "encodedId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/streamgroups/{encodedId}/discover.json": {
      "get": {
        "tags": [
          "StreamGroups"
        ],
        "operationId": "StreamGroups_GetStreamGroupDiscover",
        "parameters": [
          {
            "name": "encodedId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/streamgroups/{encodedId}/epg.xml": {
      "get": {
        "tags": [
          "StreamGroups"
        ],
        "operationId": "StreamGroups_GetStreamGroupEPG",
        "parameters": [
          {
            "name": "encodedId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/streamgroups/{encodedId}/lineup.json": {
      "get": {
        "tags": [
          "StreamGroups"
        ],
        "operationId": "StreamGroups_GetStreamGroupLineup",
        "parameters": [
          {
            "name": "encodedId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/streamgroups/{encodedId}/lineup_status.json": {
      "get": {
        "tags": [
          "StreamGroups"
        ],
        "operationId": "StreamGroups_GetStreamGroupLineupStatus",
        "parameters": [
          {
            "name": "encodedId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/streamgroups/{encodedId}/m3u.m3u": {
      "get": {
        "tags": [
          "StreamGroups"
        ],
        "operationId": "StreamGroups_GetStreamGroupM3U",
        "parameters": [
          {
            "name": "encodedId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/streamgroups/{encodedId}/auto/v{channelNumber}": {
      "get": {
        "tags": [
          "StreamGroups"
        ],
        "operationId": "StreamGroups_GetAutoStream",
        "parameters": [
          {
            "name": "encodedId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "channelNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/statistics/getchannelmetrics": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "operationId": "Statistics_GetChannelMetrics",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChannelMetric"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/statistics/getvideoinfo": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "operationId": "Statistics_GetVideoInfo",
        "parameters": [
          {
            "name": "SMStreamId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoInfo"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/statistics/getvideoinfos": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "operationId": "Statistics_GetVideoInfos",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VideoInfoDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smtasks/getsmtasks": {
      "get": {
        "tags": [
          "SMTasks"
        ],
        "operationId": "SMTasks_GetSMTasks",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SMTask"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smtasks/sendsmtasks": {
      "patch": {
        "tags": [
          "SMTasks"
        ],
        "operationId": "SMTasks_SendSMTasks",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendSMTasksRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smstreams/getpagedsmstreams": {
      "get": {
        "tags": [
          "SMStreams"
        ],
        "operationId": "SMStreams_GetPagedSMStreams",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 3
          },
          {
            "name": "JSONArgumentString",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "JSONFiltersString",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponseOfSMStreamDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smstreams/createsmstream": {
      "post": {
        "tags": [
          "SMStreams"
        ],
        "operationId": "SMStreams_CreateSMStream",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSMStreamRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smstreams/deletesmstream": {
      "delete": {
        "tags": [
          "SMStreams"
        ],
        "operationId": "SMStreams_DeleteSMStream",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteSMStreamRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smstreams/setsmstreamsvisiblebyid": {
      "patch": {
        "tags": [
          "SMStreams"
        ],
        "operationId": "SMStreams_SetSMStreamsVisibleById",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetSMStreamsVisibleByIdRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smstreams/togglesmstreamsvisiblebyid": {
      "patch": {
        "tags": [
          "SMStreams"
        ],
        "operationId": "SMStreams_ToggleSMStreamsVisibleById",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ToggleSMStreamsVisibleByIdRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smstreams/togglesmstreamvisiblebyid": {
      "patch": {
        "tags": [
          "SMStreams"
        ],
        "operationId": "SMStreams_ToggleSMStreamVisibleById",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ToggleSMStreamVisibleByIdRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smstreams/togglesmstreamvisiblebyparameters": {
      "patch": {
        "tags": [
          "SMStreams"
        ],
        "operationId": "SMStreams_ToggleSMStreamVisibleByParameters",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ToggleSMStreamVisibleByParametersRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smstreams/updatesmstream": {
      "patch": {
        "tags": [
          "SMStreams"
        ],
        "operationId": "SMStreams_UpdateSMStream",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSMStreamRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smmessages/sendsmerror": {
      "patch": {
        "tags": [
          "SMMessages"
        ],
        "operationId": "SMMessages_SendSMError",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendSMErrorRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smmessages/sendsminfo": {
      "patch": {
        "tags": [
          "SMMessages"
        ],
        "operationId": "SMMessages_SendSMInfo",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendSMInfoRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smmessages/sendsmmessage": {
      "patch": {
        "tags": [
          "SMMessages"
        ],
        "operationId": "SMMessages_SendSMMessage",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendSMMessageRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smmessages/sendsmwarn": {
      "patch": {
        "tags": [
          "SMMessages"
        ],
        "operationId": "SMMessages_SendSMWarn",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendSMWarnRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smmessages/sendsuccess": {
      "patch": {
        "tags": [
          "SMMessages"
        ],
        "operationId": "SMMessages_SendSuccess",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendSuccessRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smchannelstreamlinks/getsmchannelstreams": {
      "get": {
        "tags": [
          "SMChannelStreamLinks"
        ],
        "operationId": "SMChannelStreamLinks_GetSMChannelStreams",
        "parameters": [
          {
            "name": "SMChannelId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SMStreamDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smchannelstreamlinks/addsmstreamtosmchannel": {
      "patch": {
        "tags": [
          "SMChannelStreamLinks"
        ],
        "operationId": "SMChannelStreamLinks_AddSMStreamToSMChannel",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddSMStreamToSMChannelRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smchannelstreamlinks/removesmstreamfromsmchannel": {
      "delete": {
        "tags": [
          "SMChannelStreamLinks"
        ],
        "operationId": "SMChannelStreamLinks_RemoveSMStreamFromSMChannel",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveSMStreamFromSMChannelRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smchannelstreamlinks/setsmstreamranks": {
      "patch": {
        "tags": [
          "SMChannelStreamLinks"
        ],
        "operationId": "SMChannelStreamLinks_SetSMStreamRanks",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetSMStreamRanksRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smchannels/getpagedsmchannels": {
      "get": {
        "tags": [
          "SMChannels"
        ],
        "operationId": "SMChannels_GetPagedSMChannels",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 3
          },
          {
            "name": "JSONArgumentString",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "JSONFiltersString",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponseOfSMChannelDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smchannels/getsmchannelnamelogos": {
      "get": {
        "tags": [
          "SMChannels"
        ],
        "operationId": "SMChannels_GetSMChannelNameLogos",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NameLogo"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smchannels/getsmchannelnames": {
      "get": {
        "tags": [
          "SMChannels"
        ],
        "operationId": "SMChannels_GetSMChannelNames",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smchannels/getvideostreamnamesandurls": {
      "get": {
        "tags": [
          "SMChannels"
        ],
        "operationId": "SMChannels_GetVideoStreamNamesAndUrls",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IdNameUrl"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smchannels/autosetepgfromparameters": {
      "patch": {
        "tags": [
          "SMChannels"
        ],
        "operationId": "SMChannels_AutoSetEPGFromParameters",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutoSetEPGFromParametersRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smchannels/autosetepg": {
      "patch": {
        "tags": [
          "SMChannels"
        ],
        "operationId": "SMChannels_AutoSetEPG",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutoSetEPGRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smchannels/autosetsmchannelnumbersfromparameters": {
      "patch": {
        "tags": [
          "SMChannels"
        ],
        "operationId": "SMChannels_AutoSetSMChannelNumbersFromParameters",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutoSetSMChannelNumbersFromParametersRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smchannels/autosetsmchannelnumbers": {
      "patch": {
        "tags": [
          "SMChannels"
        ],
        "operationId": "SMChannels_AutoSetSMChannelNumbers",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutoSetSMChannelNumbersRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smchannels/copysmchannel": {
      "patch": {
        "tags": [
          "SMChannels"
        ],
        "operationId": "SMChannels_CopySMChannel",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CopySMChannelRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smchannels/createmultiviewchannel": {
      "post": {
        "tags": [
          "SMChannels"
        ],
        "operationId": "SMChannels_CreateMultiViewChannel",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMultiViewChannelRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smchannels/createsmchannel": {
      "post": {
        "tags": [
          "SMChannels"
        ],
        "operationId": "SMChannels_CreateSMChannel",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSMChannelRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smchannels/createsmchannelsfromstreamparameters": {
      "post": {
        "tags": [
          "SMChannels"
        ],
        "operationId": "SMChannels_CreateSMChannelsFromStreamParameters",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSMChannelsFromStreamParametersRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smchannels/createsmchannelsfromstreams": {
      "post": {
        "tags": [
          "SMChannels"
        ],
        "operationId": "SMChannels_CreateSMChannelsFromStreams",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSMChannelsFromStreamsRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smchannels/deletesmchannel": {
      "delete": {
        "tags": [
          "SMChannels"
        ],
        "operationId": "SMChannels_DeleteSMChannel",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteSMChannelRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smchannels/deletesmchannelsfromparameters": {
      "delete": {
        "tags": [
          "SMChannels"
        ],
        "operationId": "SMChannels_DeleteSMChannelsFromParameters",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteSMChannelsFromParametersRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smchannels/deletesmchannels": {
      "delete": {
        "tags": [
          "SMChannels"
        ],
        "operationId": "SMChannels_DeleteSMChannels",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteSMChannelsRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smchannels/setsmchannelepgid": {
      "patch": {
        "tags": [
          "SMChannels"
        ],
        "operationId": "SMChannels_SetSMChannelEPGId",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetSMChannelEPGIdRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smchannels/setsmchannelgroup": {
      "patch": {
        "tags": [
          "SMChannels"
        ],
        "operationId": "SMChannels_SetSMChannelGroup",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetSMChannelGroupRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smchannels/setsmchannellogo": {
      "patch": {
        "tags": [
          "SMChannels"
        ],
        "operationId": "SMChannels_SetSMChannelLogo",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetSMChannelLogoRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smchannels/setsmchannelname": {
      "patch": {
        "tags": [
          "SMChannels"
        ],
        "operationId": "SMChannels_SetSMChannelName",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetSMChannelNameRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smchannels/setsmchannelnumber": {
      "patch": {
        "tags": [
          "SMChannels"
        ],
        "operationId": "SMChannels_SetSMChannelNumber",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetSMChannelNumberRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smchannels/setsmchannelsgroupfromparameters": {
      "patch": {
        "tags": [
          "SMChannels"
        ],
        "operationId": "SMChannels_SetSMChannelsGroupFromParameters",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetSMChannelsGroupFromParametersRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smchannels/setsmchannelsgroup": {
      "patch": {
        "tags": [
          "SMChannels"
        ],
        "operationId": "SMChannels_SetSMChannelsGroup",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetSMChannelsGroupRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smchannels/setsmchannelslogofromepgfromparameters": {
      "patch": {
        "tags": [
          "SMChannels"
        ],
        "operationId": "SMChannels_SetSMChannelsLogoFromEPGFromParameters",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetSMChannelsLogoFromEPGFromParametersRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smchannels/setsmchannelslogofromepg": {
      "patch": {
        "tags": [
          "SMChannels"
        ],
        "operationId": "SMChannels_SetSMChannelsLogoFromEPG",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetSMChannelsLogoFromEPGRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smchannels/setsmchannelscommandprofilenamefromparameters": {
      "patch": {
        "tags": [
          "SMChannels"
        ],
        "operationId": "SMChannels_SetSMChannelsCommandProfileNameFromParameters",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetSMChannelsCommandProfileNameFromParametersRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smchannels/setsmchannelscommandprofilename": {
      "patch": {
        "tags": [
          "SMChannels"
        ],
        "operationId": "SMChannels_SetSMChannelsCommandProfileName",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetSMChannelsCommandProfileNameRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smchannels/setsmchannelcommandprofilename": {
      "patch": {
        "tags": [
          "SMChannels"
        ],
        "operationId": "SMChannels_SetSMChannelCommandProfileName",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetSMChannelCommandProfileNameRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smchannels/togglesmchannelsvisiblebyid": {
      "patch": {
        "tags": [
          "SMChannels"
        ],
        "operationId": "SMChannels_ToggleSMChannelsVisibleById",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ToggleSMChannelsVisibleByIdRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smchannels/togglesmchannelvisiblebyid": {
      "patch": {
        "tags": [
          "SMChannels"
        ],
        "operationId": "SMChannels_ToggleSMChannelVisibleById",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ToggleSMChannelVisibleByIdRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smchannels/togglesmchannelvisiblebyparameters": {
      "patch": {
        "tags": [
          "SMChannels"
        ],
        "operationId": "SMChannels_ToggleSMChannelVisibleByParameters",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ToggleSMChannelVisibleByParametersRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smchannels/updatemultiviewchannel": {
      "patch": {
        "tags": [
          "SMChannels"
        ],
        "operationId": "SMChannels_UpdateMultiViewChannel",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMultiViewChannelRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smchannels/updatesmchannel": {
      "patch": {
        "tags": [
          "SMChannels"
        ],
        "operationId": "SMChannels_UpdateSMChannel",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSMChannelRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smchannelchannellinks/getsmchannelchannels": {
      "get": {
        "tags": [
          "SMChannelChannelLinks"
        ],
        "operationId": "SMChannelChannelLinks_GetSMChannelChannels",
        "parameters": [
          {
            "name": "SMChannelId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SMChannelDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smchannelchannellinks/addsmchanneltosmchannel": {
      "patch": {
        "tags": [
          "SMChannelChannelLinks"
        ],
        "operationId": "SMChannelChannelLinks_AddSMChannelToSMChannel",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddSMChannelToSMChannelRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smchannelchannellinks/removesmchannelfromsmchannel": {
      "delete": {
        "tags": [
          "SMChannelChannelLinks"
        ],
        "operationId": "SMChannelChannelLinks_RemoveSMChannelFromSMChannel",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveSMChannelFromSMChannelRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/smchannelchannellinks/setsmchannelranks": {
      "patch": {
        "tags": [
          "SMChannelChannelLinks"
        ],
        "operationId": "SMChannelChannelLinks_SetSMChannelRanks",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetSMChannelRanksRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/settings/getsettings": {
      "get": {
        "tags": [
          "Settings"
        ],
        "operationId": "Settings_GetSettings",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/settings/updatesetting": {
      "patch": {
        "tags": [
          "Settings"
        ],
        "operationId": "Settings_UpdateSetting",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSettingRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSettingResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/schedulesdirect/getavailablecountries": {
      "get": {
        "tags": [
          "SchedulesDirect"
        ],
        "operationId": "SchedulesDirect_GetAvailableCountries",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CountryData"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/schedulesdirect/getheadendsbycountrypostal": {
      "get": {
        "tags": [
          "SchedulesDirect"
        ],
        "operationId": "SchedulesDirect_GetHeadendsByCountryPostal",
        "parameters": [
          {
            "name": "Country",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "PostalCode",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HeadendDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/schedulesdirect/getheadendstoview": {
      "get": {
        "tags": [
          "SchedulesDirect"
        ],
        "operationId": "SchedulesDirect_GetHeadendsToView",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HeadendToView"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/schedulesdirect/getlineuppreviewchannel": {
      "get": {
        "tags": [
          "SchedulesDirect"
        ],
        "operationId": "SchedulesDirect_GetLineupPreviewChannel",
        "parameters": [
          {
            "name": "Lineup",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LineupPreviewChannel"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/schedulesdirect/getselectedstationids": {
      "get": {
        "tags": [
          "SchedulesDirect"
        ],
        "operationId": "SchedulesDirect_GetSelectedStationIds",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StationIdLineup"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/schedulesdirect/getstationchannelnames": {
      "get": {
        "tags": [
          "SchedulesDirect"
        ],
        "operationId": "SchedulesDirect_GetStationChannelNames",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StationChannelName"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/schedulesdirect/getstationpreviews": {
      "get": {
        "tags": [
          "SchedulesDirect"
        ],
        "operationId": "SchedulesDirect_GetStationPreviews",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StationPreview"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/schedulesdirect/getsubscribedheadends": {
      "get": {
        "tags": [
          "SchedulesDirect"
        ],
        "operationId": "SchedulesDirect_GetSubScribedHeadends",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HeadendDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/schedulesdirect/getsubscribedlineups": {
      "get": {
        "tags": [
          "SchedulesDirect"
        ],
        "operationId": "SchedulesDirect_GetSubscribedLineups",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscribedLineup"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/schedulesdirect/addheadendtoview": {
      "patch": {
        "tags": [
          "SchedulesDirect"
        ],
        "operationId": "SchedulesDirect_AddHeadendToView",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddHeadendToViewRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/schedulesdirect/addlineup": {
      "patch": {
        "tags": [
          "SchedulesDirect"
        ],
        "operationId": "SchedulesDirect_AddLineup",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddLineupRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/schedulesdirect/addstation": {
      "patch": {
        "tags": [
          "SchedulesDirect"
        ],
        "operationId": "SchedulesDirect_AddStation",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddStationRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/schedulesdirect/removeheadendtoview": {
      "delete": {
        "tags": [
          "SchedulesDirect"
        ],
        "operationId": "SchedulesDirect_RemoveHeadendToView",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveHeadendToViewRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/schedulesdirect/removelineup": {
      "delete": {
        "tags": [
          "SchedulesDirect"
        ],
        "operationId": "SchedulesDirect_RemoveLineup",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveLineupRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/schedulesdirect/removestation": {
      "delete": {
        "tags": [
          "SchedulesDirect"
        ],
        "operationId": "SchedulesDirect_RemoveStation",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveStationRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/schedulesdirect/setstations": {
      "patch": {
        "tags": [
          "SchedulesDirect"
        ],
        "operationId": "SchedulesDirect_SetStations",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetStationsRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/profiles/getcommandprofiles": {
      "get": {
        "tags": [
          "Profiles"
        ],
        "operationId": "Profiles_GetCommandProfiles",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CommandProfileDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/profiles/getoutputprofile": {
      "get": {
        "tags": [
          "Profiles"
        ],
        "operationId": "Profiles_GetOutputProfile",
        "parameters": [
          {
            "name": "OutputProfileName",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OutputProfileDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/profiles/getoutputprofiles": {
      "get": {
        "tags": [
          "Profiles"
        ],
        "operationId": "Profiles_GetOutputProfiles",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OutputProfileDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/profiles/addcommandprofile": {
      "patch": {
        "tags": [
          "Profiles"
        ],
        "operationId": "Profiles_AddCommandProfile",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddCommandProfileRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/profiles/addoutputprofile": {
      "patch": {
        "tags": [
          "Profiles"
        ],
        "operationId": "Profiles_AddOutputProfile",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddOutputProfileRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/profiles/removecommandprofile": {
      "delete": {
        "tags": [
          "Profiles"
        ],
        "operationId": "Profiles_RemoveCommandProfile",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveCommandProfileRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/profiles/removeoutputprofile": {
      "delete": {
        "tags": [
          "Profiles"
        ],
        "operationId": "Profiles_RemoveOutputProfile",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveOutputProfileRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/profiles/updatecommandprofile": {
      "patch": {
        "tags": [
          "Profiles"
        ],
        "operationId": "Profiles_UpdateCommandProfile",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommandProfileRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/profiles/updateoutputprofile": {
      "patch": {
        "tags": [
          "Profiles"
        ],
        "operationId": "Profiles_UpdateOutputProfile",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOutputProfileRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/m3ufiles/getm3ufilenames": {
      "get": {
        "tags": [
          "M3UFiles"
        ],
        "operationId": "M3UFiles_GetM3UFileNames",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/m3ufiles/getm3ufiles": {
      "get": {
        "tags": [
          "M3UFiles"
        ],
        "operationId": "M3UFiles_GetM3UFiles",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/M3UFileDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/m3ufiles/getpagedm3ufiles": {
      "get": {
        "tags": [
          "M3UFiles"
        ],
        "operationId": "M3UFiles_GetPagedM3UFiles",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 3
          },
          {
            "name": "JSONArgumentString",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "JSONFiltersString",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponseOfM3UFileDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/m3ufiles/createm3ufile": {
      "post": {
        "tags": [
          "M3UFiles"
        ],
        "operationId": "M3UFiles_CreateM3UFile",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateM3UFileRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/m3ufiles/deletem3ufile": {
      "delete": {
        "tags": [
          "M3UFiles"
        ],
        "operationId": "M3UFiles_DeleteM3UFile",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteM3UFileRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/m3ufiles/processm3ufile": {
      "patch": {
        "tags": [
          "M3UFiles"
        ],
        "operationId": "M3UFiles_ProcessM3UFile",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessM3UFileRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/m3ufiles/refreshm3ufile": {
      "patch": {
        "tags": [
          "M3UFiles"
        ],
        "operationId": "M3UFiles_RefreshM3UFile",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshM3UFileRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/m3ufiles/syncchannels": {
      "patch": {
        "tags": [
          "M3UFiles"
        ],
        "operationId": "M3UFiles_SyncChannels",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SyncChannelsRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/m3ufiles/updatem3ufile": {
      "patch": {
        "tags": [
          "M3UFiles"
        ],
        "operationId": "M3UFiles_UpdateM3UFile",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateM3UFileRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/m3ufiles/createm3ufilefromform": {
      "post": {
        "tags": [
          "M3UFiles"
        ],
        "operationId": "M3UFiles_CreateM3UFileFromForm",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Name": {
                    "type": "string"
                  },
                  "MaxStreamCount": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "M3U8OutPutProfile": {
                    "type": "string",
                    "nullable": true
                  },
                  "M3UKey": {
                    "type": "string",
                    "nullable": true
                  },
                  "M3UName": {
                    "type": "string",
                    "nullable": true
                  },
                  "StartingChannelNumber": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "AutoSetChannelNumbers": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "DefaultStreamGroupName": {
                    "type": "string",
                    "nullable": true
                  },
                  "HoursToUpdate": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "SyncChannels": {
                    "type": "boolean",
                    "nullable": true
                  },
                  "FormFile": {
                    "type": "string",
                    "format": "binary",
                    "nullable": true
                  },
                  "VODTags": {
                    "type": "array",
                    "nullable": true,
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/logs/getlogcontents": {
      "get": {
        "tags": [
          "Logs"
        ],
        "operationId": "Logs_GetLogContents",
        "parameters": [
          {
            "name": "logName",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/logs/getlognames": {
      "get": {
        "tags": [
          "Logs"
        ],
        "operationId": "Logs_GetLogNames",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/logos/getlogos": {
      "get": {
        "tags": [
          "Logos"
        ],
        "operationId": "Logos_GetLogos",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LogoFileDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/general/getdownloadservicestatus": {
      "get": {
        "tags": [
          "General"
        ],
        "operationId": "General_GetDownloadServiceStatus",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageDownloadServiceStatus"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/general/getissystemready": {
      "get": {
        "tags": [
          "General"
        ],
        "operationId": "General_GetIsSystemReady",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/general/getsystemstatus": {
      "get": {
        "tags": [
          "General"
        ],
        "operationId": "General_GetSystemStatus",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SDSystemStatus"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/general/gettaskisrunning": {
      "get": {
        "tags": [
          "General"
        ],
        "operationId": "General_GetTaskIsRunning",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/general/settesttask": {
      "patch": {
        "tags": [
          "General"
        ],
        "operationId": "General_SetTestTask",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetTestTaskRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/epgfiles/getepgfilenames": {
      "get": {
        "tags": [
          "EPGFiles"
        ],
        "operationId": "EPGFiles_GetEPGFileNames",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/epgfiles/getepgfilepreviewbyid": {
      "get": {
        "tags": [
          "EPGFiles"
        ],
        "operationId": "EPGFiles_GetEPGFilePreviewById",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EPGFilePreviewDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/epgfiles/getepgfiles": {
      "get": {
        "tags": [
          "EPGFiles"
        ],
        "operationId": "EPGFiles_GetEPGFiles",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EPGFileDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/epgfiles/getepgnextepgnumber": {
      "get": {
        "tags": [
          "EPGFiles"
        ],
        "operationId": "EPGFiles_GetEPGNextEPGNumber",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/epgfiles/getpagedepgfiles": {
      "get": {
        "tags": [
          "EPGFiles"
        ],
        "operationId": "EPGFiles_GetPagedEPGFiles",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 3
          },
          {
            "name": "JSONArgumentString",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "JSONFiltersString",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponseOfEPGFileDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/epgfiles/createepgfile": {
      "post": {
        "tags": [
          "EPGFiles"
        ],
        "operationId": "EPGFiles_CreateEPGFile",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEPGFileRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/epgfiles/deleteepgfile": {
      "delete": {
        "tags": [
          "EPGFiles"
        ],
        "operationId": "EPGFiles_DeleteEPGFile",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteEPGFileRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/epgfiles/processepgfile": {
      "patch": {
        "tags": [
          "EPGFiles"
        ],
        "operationId": "EPGFiles_ProcessEPGFile",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessEPGFileRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/epgfiles/refreshepgfile": {
      "patch": {
        "tags": [
          "EPGFiles"
        ],
        "operationId": "EPGFiles_RefreshEPGFile",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshEPGFileRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/epgfiles/updateepgfile": {
      "patch": {
        "tags": [
          "EPGFiles"
        ],
        "operationId": "EPGFiles_UpdateEPGFile",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEPGFileRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/epgfiles/createepgfilefromform": {
      "post": {
        "tags": [
          "EPGFiles"
        ],
        "operationId": "EPGFiles_CreateEPGFileFromForm",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "FormFile": {
                    "type": "string",
                    "format": "binary",
                    "nullable": true
                  },
                  "Name": {
                    "type": "string"
                  },
                  "EPGNumber": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "HoursToUpdate": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "TimeShift": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true
                  },
                  "Color": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/epg/getepgcolors": {
      "get": {
        "tags": [
          "EPG"
        ],
        "operationId": "EPG_GetEPGColors",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EPGColorDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/epg/epgsync": {
      "patch": {
        "tags": [
          "EPG"
        ],
        "operationId": "EPG_EPGSync",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/custom/getcustomplaylist": {
      "get": {
        "tags": [
          "Custom"
        ],
        "operationId": "Custom_GetCustomPlayList",
        "parameters": [
          {
            "name": "SMStreamId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomPlayList"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/custom/getcustomplaylists": {
      "get": {
        "tags": [
          "Custom"
        ],
        "operationId": "Custom_GetCustomPlayLists",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomPlayList"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/custom/getintroplaylists": {
      "get": {
        "tags": [
          "Custom"
        ],
        "operationId": "Custom_GetIntroPlayLists",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomPlayList"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/custom/scanforcustom": {
      "patch": {
        "tags": [
          "Custom"
        ],
        "operationId": "Custom_ScanForCustom",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/channelgroups/getchannelgroupsfromsmchannels": {
      "get": {
        "tags": [
          "ChannelGroups"
        ],
        "operationId": "ChannelGroups_GetChannelGroupsFromSMChannels",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChannelGroupDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/channelgroups/getchannelgroups": {
      "get": {
        "tags": [
          "ChannelGroups"
        ],
        "operationId": "ChannelGroups_GetChannelGroups",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChannelGroupDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/channelgroups/getpagedchannelgroups": {
      "get": {
        "tags": [
          "ChannelGroups"
        ],
        "operationId": "ChannelGroups_GetPagedChannelGroups",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 3
          },
          {
            "name": "JSONArgumentString",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "JSONFiltersString",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResponseOfChannelGroupDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/channelgroups/createchannelgroup": {
      "post": {
        "tags": [
          "ChannelGroups"
        ],
        "operationId": "ChannelGroups_CreateChannelGroup",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateChannelGroupRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/channelgroups/deleteallchannelgroupsfromparameters": {
      "delete": {
        "tags": [
          "ChannelGroups"
        ],
        "operationId": "ChannelGroups_DeleteAllChannelGroupsFromParameters",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteAllChannelGroupsFromParametersRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/channelgroups/deletechannelgroup": {
      "delete": {
        "tags": [
          "ChannelGroups"
        ],
        "operationId": "ChannelGroups_DeleteChannelGroup",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteChannelGroupRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/channelgroups/deletechannelgroups": {
      "delete": {
        "tags": [
          "ChannelGroups"
        ],
        "operationId": "ChannelGroups_DeleteChannelGroups",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteChannelGroupsRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/channelgroups/updatechannelgroup": {
      "patch": {
        "tags": [
          "ChannelGroups"
        ],
        "operationId": "ChannelGroups_UpdateChannelGroup",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateChannelGroupRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    },
    "/api/channelgroups/updatechannelgroups": {
      "patch": {
        "tags": [
          "ChannelGroups"
        ],
        "operationId": "ChannelGroups_UpdateChannelGroups",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateChannelGroupsRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "SMFileTypes": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "M3U",
          "EPG",
          "HDHR",
          "Channel",
          "M3UStream",
          "Logo",
          "Image",
          "TvLogo",
          "CustomLogo",
          "SDImage",
          "SDStationLogo",
          "CustomPlayList",
          "CustomPlayListLogo"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          9,
          10,
          11,
          12,
          13
        ]
      },
      "ImageDownloadServiceStatus": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "totalProgramMetadata": {
            "type": "integer",
            "format": "int32"
          },
          "totalNameLogo": {
            "type": "integer",
            "format": "int32"
          },
          "totalProgramMetadataDownloadAttempts": {
            "type": "integer",
            "format": "int32"
          },
          "totalNameLogoDownloadAttempts": {
            "type": "integer",
            "format": "int32"
          },
          "totalProgramMetadataDownloaded": {
            "type": "integer",
            "format": "int32"
          },
          "totalNameLogoSuccessful": {
            "type": "integer",
            "format": "int32"
          },
          "totalProgramMetadataAlreadyExists": {
            "type": "integer",
            "format": "int32"
          },
          "totalNameLogoAlreadyExists": {
            "type": "integer",
            "format": "int32"
          },
          "totalProgramMetadataErrors": {
            "type": "integer",
            "format": "int32"
          },
          "totalNameLogoErrors": {
            "type": "integer",
            "format": "int32"
          },
          "totalProgramMetadataNoArt": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SourceBroadcaster": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BroadcasterBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "smStreamInfo": {
                "$ref": "#/components/schemas/SMStreamInfo"
              }
            }
          }
        ]
      },
      "SMStreamInfo": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "commandProfile",
          "id",
          "clientUserAgent",
          "name",
          "url",
          "secondsIn",
          "smStreamType"
        ],
        "properties": {
          "commandProfile": {
            "$ref": "#/components/schemas/CommandProfileDto"
          },
          "id": {
            "type": "string"
          },
          "clientUserAgent": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "secondsIn": {
            "type": "integer",
            "format": "int32"
          },
          "smStreamType": {
            "$ref": "#/components/schemas/SMStreamTypeEnum"
          }
        }
      },
      "CommandProfileDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CommandProfile"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "profileName": {
                "type": "string"
              }
            }
          }
        ]
      },
      "CommandProfile": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "isReadOnly": {
            "type": "boolean"
          },
          "command": {
            "type": "string"
          },
          "parameters": {
            "type": "string"
          }
        }
      },
      "SMStreamTypeEnum": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Regular",
          "CustomPlayList",
          "Custom",
          "Intro",
          "Message"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4
        ]
      },
      "BroadcasterBase": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "clientStreamerConfigurations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/IClientConfiguration"
            }
          },
          "clientChannelWriters": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ChannelWriterOfByteOf"
            }
          },
          "clientCount": {
            "type": "integer",
            "format": "int32"
          },
          "isFailed": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "sourceName": {
            "type": "string"
          },
          "channelItemBackLog": {
            "type": "integer",
            "format": "int64"
          },
          "metrics": {
            "$ref": "#/components/schemas/StreamHandlerMetrics"
          }
        }
      },
      "IClientConfiguration": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "httpContextId": {
            "type": "string"
          },
          "smChannel": {
            "$ref": "#/components/schemas/SMChannelDto"
          },
          "loggerFactory": {
            "$ref": "#/components/schemas/ILoggerFactory"
          },
          "clientIPAddress": {
            "type": "string"
          },
          "clientUserAgent": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/HttpResponse"
          },
          "uniqueRequestId": {
            "type": "string"
          }
        }
      },
      "SMChannelDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SMChannel"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "smStreamDtos": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SMStreamDto"
                }
              },
              "smChannelDtos": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SMChannelDto"
                }
              },
              "streamGroupIds": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "streamUrl": {
                "type": "string"
              },
              "currentRank": {
                "type": "integer",
                "format": "int32"
              },
              "rank": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "SMStreamDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SMStream"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "rank": {
                "type": "integer",
                "format": "int32"
              },
              "realUrl": {
                "type": "string"
              },
              "channelMembership": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameLogo"
                }
              }
            }
          }
        ]
      },
      "NameLogo": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "smFileType": {
            "$ref": "#/components/schemas/SMFileTypes"
          }
        }
      },
      "SMStream": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "clientUserAgent": {
            "type": "string",
            "nullable": true
          },
          "commandProfileName": {
            "type": "string",
            "nullable": true
          },
          "filePosition": {
            "type": "integer",
            "format": "int32"
          },
          "isHidden": {
            "type": "boolean"
          },
          "isUserCreated": {
            "type": "boolean"
          },
          "m3UFileId": {
            "type": "integer",
            "format": "int32"
          },
          "channelNumber": {
            "type": "integer",
            "format": "int32"
          },
          "m3UFileName": {
            "type": "string"
          },
          "group": {
            "type": "string"
          },
          "epgid": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "stationId": {
            "type": "string"
          },
          "isSystem": {
            "type": "boolean"
          },
          "needsDelete": {
            "type": "boolean"
          },
          "channelName": {
            "type": "string"
          },
          "tvgName": {
            "type": "string"
          },
          "cuid": {
            "type": "string"
          },
          "channelId": {
            "type": "string"
          },
          "smStreamType": {
            "$ref": "#/components/schemas/SMStreamTypeEnum"
          }
        }
      },
      "SMChannel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "commandProfileName": {
            "type": "string"
          },
          "isHidden": {
            "type": "boolean"
          },
          "baseStreamID": {
            "type": "string"
          },
          "m3UFileId": {
            "type": "integer",
            "format": "int32"
          },
          "channelNumber": {
            "type": "integer",
            "format": "int32"
          },
          "channelId": {
            "type": "string"
          },
          "tvgName": {
            "type": "string"
          },
          "channelName": {
            "type": "string"
          },
          "timeShift": {
            "type": "integer",
            "format": "int32"
          },
          "group": {
            "type": "string"
          },
          "epgId": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "clientUserAgent": {
            "type": "string",
            "nullable": true
          },
          "stationId": {
            "type": "string"
          },
          "groupTitle": {
            "type": "string"
          },
          "isSystem": {
            "type": "boolean"
          },
          "smChannelType": {
            "$ref": "#/components/schemas/SMChannelTypeEnum"
          }
        }
      },
      "SMChannelTypeEnum": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Regular",
          "MultiView"
        ],
        "enum": [
          0,
          1
        ]
      },
      "ILoggerFactory": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false
      },
      "HttpResponse": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "httpContext": {
            "$ref": "#/components/schemas/HttpContext"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "headers": {
            "type": "array",
            "items": {}
          },
          "body": {
            "$ref": "#/components/schemas/Stream"
          },
          "bodyWriter": {
            "$ref": "#/components/schemas/PipeWriter"
          },
          "contentLength": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "contentType": {
            "type": "string",
            "nullable": true
          },
          "cookies": {
            "$ref": "#/components/schemas/IResponseCookies"
          },
          "hasStarted": {
            "type": "boolean"
          }
        }
      },
      "HttpContext": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "features": {
            "type": "array",
            "items": {}
          },
          "request": {
            "$ref": "#/components/schemas/HttpRequest"
          },
          "response": {
            "$ref": "#/components/schemas/HttpResponse"
          },
          "connection": {
            "$ref": "#/components/schemas/ConnectionInfo"
          },
          "webSockets": {
            "$ref": "#/components/schemas/WebSocketManager"
          },
          "user": {
            "$ref": "#/components/schemas/ClaimsPrincipal"
          },
          "items": {
            "type": "object",
            "additionalProperties": {}
          },
          "requestServices": {
            "$ref": "#/components/schemas/IServiceProvider"
          },
          "requestAborted": {
            "$ref": "#/components/schemas/CancellationToken"
          },
          "traceIdentifier": {
            "type": "string"
          },
          "session": {
            "$ref": "#/components/schemas/ISession"
          }
        }
      },
      "HttpRequest": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "httpContext": {
            "$ref": "#/components/schemas/HttpContext"
          },
          "method": {
            "type": "string"
          },
          "scheme": {
            "type": "string"
          },
          "isHttps": {
            "type": "boolean"
          },
          "host": {
            "$ref": "#/components/schemas/HostString"
          },
          "pathBase": {
            "$ref": "#/components/schemas/PathString"
          },
          "path": {
            "$ref": "#/components/schemas/PathString"
          },
          "queryString": {
            "$ref": "#/components/schemas/QueryString"
          },
          "query": {
            "type": "array",
            "items": {}
          },
          "protocol": {
            "type": "string"
          },
          "headers": {
            "type": "array",
            "items": {}
          },
          "cookies": {
            "type": "array",
            "items": {}
          },
          "contentLength": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "contentType": {
            "type": "string",
            "nullable": true
          },
          "body": {
            "$ref": "#/components/schemas/Stream"
          },
          "bodyReader": {
            "$ref": "#/components/schemas/PipeReader"
          },
          "hasFormContentType": {
            "type": "boolean"
          },
          "form": {
            "type": "array",
            "items": {}
          },
          "routeValues": {
            "type": "array",
            "items": {}
          }
        }
      },
      "HostString": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "string"
          },
          "hasValue": {
            "type": "boolean"
          },
          "host": {
            "type": "string"
          },
          "port": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "PathString": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          },
          "hasValue": {
            "type": "boolean"
          }
        }
      },
      "QueryString": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          },
          "hasValue": {
            "type": "boolean"
          }
        }
      },
      "Stream": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MarshalByRefObject"
          },
          {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false,
            "properties": {
              "canRead": {
                "type": "boolean"
              },
              "canWrite": {
                "type": "boolean"
              },
              "canSeek": {
                "type": "boolean"
              },
              "canTimeout": {
                "type": "boolean"
              },
              "length": {
                "type": "integer",
                "format": "int64"
              },
              "position": {
                "type": "integer",
                "format": "int64"
              },
              "readTimeout": {
                "type": "integer",
                "format": "int32"
              },
              "writeTimeout": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "MarshalByRefObject": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false
      },
      "PipeReader": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false
      },
      "ConnectionInfo": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "remoteIpAddress": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IPAddress"
              }
            ]
          },
          "remotePort": {
            "type": "integer",
            "format": "int32"
          },
          "localIpAddress": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IPAddress"
              }
            ]
          },
          "localPort": {
            "type": "integer",
            "format": "int32"
          },
          "clientCertificate": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/X509Certificate2"
              }
            ]
          }
        }
      },
      "IPAddress": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "privateAddress": {
            "type": "integer"
          },
          "addressFamily": {
            "$ref": "#/components/schemas/AddressFamily"
          },
          "scopeId": {
            "type": "integer",
            "format": "int64"
          },
          "isIPv6Multicast": {
            "type": "boolean"
          },
          "isIPv6LinkLocal": {
            "type": "boolean"
          },
          "isIPv6SiteLocal": {
            "type": "boolean"
          },
          "isIPv6Teredo": {
            "type": "boolean"
          },
          "isIPv6UniqueLocal": {
            "type": "boolean"
          },
          "isIPv4MappedToIPv6": {
            "type": "boolean"
          },
          "address": {
            "type": "integer",
            "format": "int64",
            "deprecated": true,
            "x-deprecatedMessage": "IPAddress.Address is address family dependent and has been deprecated. Use IPAddress.Equals to perform comparisons instead."
          }
        }
      },
      "AddressFamily": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Unspecified",
          "Unix",
          "InterNetwork",
          "ImpLink",
          "Pup",
          "Chaos",
          "NS",
          "Ipx",
          "Iso",
          "Osi",
          "Ecma",
          "DataKit",
          "Ccitt",
          "Sna",
          "DecNet",
          "DataLink",
          "Lat",
          "HyperChannel",
          "AppleTalk",
          "NetBios",
          "VoiceView",
          "FireFox",
          "Banyan",
          "Atm",
          "InterNetworkV6",
          "Cluster",
          "Ieee12844",
          "Irda",
          "NetworkDesigners",
          "Max",
          "Packet",
          "ControllerAreaNetwork",
          "Unknown"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          6,
          7,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          21,
          22,
          23,
          24,
          25,
          26,
          28,
          29,
          65536,
          65537,
          -1
        ]
      },
      "X509Certificate2": {
        "allOf": [
          {
            "$ref": "#/components/schemas/X509Certificate"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "pal": {
                "$ref": "#/components/schemas/ICertificatePal"
              },
              "archived": {
                "type": "boolean"
              },
              "extensions": {
                "type": "array",
                "items": {}
              },
              "friendlyName": {
                "type": "string"
              },
              "hasPrivateKey": {
                "type": "boolean"
              },
              "privateKey": {
                "deprecated": true,
                "x-deprecatedMessage": "X509Certificate2.PrivateKey is obsolete. Use the appropriate method to get the private key, such as GetRSAPrivateKey, or use the CopyWithPrivateKey method to create a new instance with a private key.",
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/AsymmetricAlgorithm"
                  }
                ]
              },
              "issuerName": {
                "$ref": "#/components/schemas/X500DistinguishedName"
              },
              "notAfter": {
                "type": "string",
                "format": "date-time"
              },
              "notBefore": {
                "type": "string",
                "format": "date-time"
              },
              "publicKey": {
                "$ref": "#/components/schemas/PublicKey"
              },
              "rawData": {
                "type": "string",
                "format": "byte"
              },
              "rawDataMemory": {
                "$ref": "#/components/schemas/ReadOnlyMemoryOfByte"
              },
              "serialNumber": {
                "type": "string"
              },
              "signatureAlgorithm": {
                "$ref": "#/components/schemas/Oid"
              },
              "subjectName": {
                "$ref": "#/components/schemas/X500DistinguishedName"
              },
              "thumbprint": {
                "type": "string"
              },
              "version": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "ICertificatePal": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "archived": {
            "type": "boolean"
          },
          "friendlyName": {
            "type": "string",
            "nullable": true
          },
          "subjectName": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/X500DistinguishedName"
              }
            ]
          },
          "issuerName": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/X500DistinguishedName"
              }
            ]
          },
          "extensions": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/X509Extension"
            }
          }
        }
      },
      "X500DistinguishedName": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AsnEncodedData"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              }
            }
          }
        ]
      },
      "AsnEncodedData": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "oid": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Oid"
              }
            ]
          },
          "rawData": {
            "type": "string",
            "format": "byte"
          }
        }
      },
      "Oid": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          },
          "friendlyName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "X509Extension": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AsnEncodedData"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "critical": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "AsymmetricAlgorithm": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "keySize": {
            "type": "integer",
            "format": "int32"
          },
          "legalKeySizes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeySizes"
            }
          },
          "signatureAlgorithm": {
            "type": "string",
            "nullable": true
          },
          "keyExchangeAlgorithm": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "KeySizes": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "minSize": {
            "type": "integer",
            "format": "int32"
          },
          "maxSize": {
            "type": "integer",
            "format": "int32"
          },
          "skipSize": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PublicKey": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "encodedKeyValue": {
            "$ref": "#/components/schemas/AsnEncodedData"
          },
          "encodedParameters": {
            "$ref": "#/components/schemas/AsnEncodedData"
          },
          "key": {
            "deprecated": true,
            "x-deprecatedMessage": "PublicKey.Key is obsolete. Use the appropriate method to get the public key, such as GetRSAPublicKey.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/AsymmetricAlgorithm"
              }
            ]
          },
          "oid": {
            "$ref": "#/components/schemas/Oid"
          }
        }
      },
      "ReadOnlyMemoryOfByte": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "length": {
            "type": "integer",
            "format": "int32"
          },
          "isEmpty": {
            "type": "boolean"
          },
          "span": {
            "$ref": "#/components/schemas/ReadOnlySpanOfByte"
          }
        }
      },
      "ReadOnlySpanOfByte": {
        "type": "object",
        "deprecated": true,
        "x-deprecatedMessage": "Types with embedded references are not supported in this version of your compiler.",
        "additionalProperties": false,
        "properties": {
          "length": {
            "type": "integer",
            "format": "int32"
          },
          "isEmpty": {
            "type": "boolean"
          }
        }
      },
      "X509Certificate": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "handle": {
            "$ref": "#/components/schemas/IntPtr"
          },
          "issuer": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "serialNumberBytes": {
            "$ref": "#/components/schemas/ReadOnlyMemoryOfByte"
          },
          "pal": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ICertificatePalCore"
              }
            ]
          }
        }
      },
      "IntPtr": {
        "type": "object",
        "additionalProperties": false
      },
      "ICertificatePalCore": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "hasPrivateKey": {
            "type": "boolean"
          },
          "handle": {
            "$ref": "#/components/schemas/IntPtr"
          },
          "issuer": {
            "type": "string",
            "nullable": true
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "legacyIssuer": {
            "type": "string",
            "nullable": true
          },
          "legacySubject": {
            "type": "string",
            "nullable": true
          },
          "thumbprint": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "keyAlgorithm": {
            "type": "string",
            "nullable": true
          },
          "keyAlgorithmParameters": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "publicKeyValue": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "serialNumber": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "signatureAlgorithm": {
            "type": "string",
            "nullable": true
          },
          "notAfter": {
            "type": "string",
            "format": "date-time"
          },
          "notBefore": {
            "type": "string",
            "format": "date-time"
          },
          "rawData": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        }
      },
      "WebSocketManager": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "isWebSocketRequest": {
            "type": "boolean"
          },
          "webSocketRequestedProtocols": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ClaimsPrincipal": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "claims": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Claim"
            }
          },
          "customSerializationData": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "identities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClaimsIdentity"
            }
          },
          "identity": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IIdentity"
              }
            ]
          }
        }
      },
      "Claim": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "customSerializationData": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "issuer": {
            "type": "string"
          },
          "originalIssuer": {
            "type": "string"
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "subject": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ClaimsIdentity"
              }
            ]
          },
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "valueType": {
            "type": "string"
          }
        }
      },
      "ClaimsIdentity": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "authenticationType": {
            "type": "string",
            "nullable": true
          },
          "isAuthenticated": {
            "type": "boolean"
          },
          "actor": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ClaimsIdentity"
              }
            ]
          },
          "bootstrapContext": {
            "nullable": true
          },
          "claims": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Claim"
            }
          },
          "customSerializationData": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "externalClaims": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Claim"
              }
            }
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "nameClaimType": {
            "type": "string"
          },
          "roleClaimType": {
            "type": "string"
          }
        }
      },
      "IIdentity": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "authenticationType": {
            "type": "string",
            "nullable": true
          },
          "isAuthenticated": {
            "type": "boolean"
          }
        }
      },
      "IServiceProvider": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false
      },
      "CancellationToken": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "isCancellationRequested": {
            "type": "boolean"
          },
          "canBeCanceled": {
            "type": "boolean"
          },
          "waitHandle": {
            "$ref": "#/components/schemas/WaitHandle"
          }
        }
      },
      "WaitHandle": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MarshalByRefObject"
          },
          {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false,
            "properties": {
              "handle": {
                "deprecated": true,
                "x-deprecatedMessage": "WaitHandle.Handle has been deprecated. Use the SafeWaitHandle property instead.",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/IntPtr"
                  }
                ]
              },
              "safeWaitHandle": {
                "$ref": "#/components/schemas/SafeWaitHandle"
              }
            }
          }
        ]
      },
      "SafeWaitHandle": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SafeHandleZeroOrMinusOneIsInvalid"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "SafeHandleZeroOrMinusOneIsInvalid": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SafeHandle"
          },
          {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false,
            "properties": {
              "isInvalid": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "SafeHandle": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CriticalFinalizerObject"
          },
          {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false,
            "properties": {
              "isClosed": {
                "type": "boolean"
              },
              "isInvalid": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "CriticalFinalizerObject": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false
      },
      "ISession": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "isAvailable": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "keys": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PipeWriter": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "canGetUnflushedBytes": {
            "type": "boolean"
          },
          "unflushedBytes": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "IResponseCookies": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false
      },
      "ChannelWriterOfByteOf": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false
      },
      "StreamHandlerMetrics": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "bytesRead",
          "bytesWritten",
          "kbps",
          "startTime",
          "averageLatency",
          "errorCount"
        ],
        "properties": {
          "bytesRead": {
            "type": "integer",
            "format": "int64"
          },
          "bytesWritten": {
            "type": "integer",
            "format": "int64"
          },
          "kbps": {
            "type": "number",
            "format": "double"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "averageLatency": {
            "type": "number",
            "format": "double"
          },
          "errorCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "IStreamHandlerMetrics": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "averageLatency": {
            "type": "number",
            "format": "double"
          },
          "bytesRead": {
            "type": "integer",
            "format": "int64"
          },
          "bytesWritten": {
            "type": "integer",
            "format": "int64"
          },
          "errorCount": {
            "type": "integer",
            "format": "int32"
          },
          "kbps": {
            "type": "number",
            "format": "double"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SetIsSystemReadyRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "isSystemReady": {
            "type": "boolean"
          }
        }
      },
      "V": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "baseUrl": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "streamGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "streamGroupName": {
            "type": "string"
          },
          "streamGroupProfileId": {
            "type": "integer",
            "format": "int32"
          },
          "streamGroupProfileName": {
            "type": "string"
          },
          "defaultRealUrl": {
            "type": "string"
          },
          "realUrl": {
            "type": "string"
          }
        }
      },
      "APIResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "isError": {
            "type": "boolean"
          }
        }
      },
      "CancelChannelRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "smChannelId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CancelClientRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "uniqueRequestId": {
            "type": "string"
          }
        }
      },
      "MoveToNextStreamRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "smChannelId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "AddSMChannelsToStreamGroupByParametersRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "parameters": {
            "$ref": "#/components/schemas/QueryStringParameters"
          },
          "streamGroupId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "QueryStringParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "orderBy": {
            "type": "string"
          },
          "jsonArgumentString": {
            "type": "string",
            "nullable": true
          },
          "jsonFiltersString": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AddSMChannelsToStreamGroupRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "streamGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "smChannelIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "AddSMChannelToStreamGroupRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "streamGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "smChannelId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RemoveSMChannelFromStreamGroupRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "streamGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "smChannelId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PagedResponseOfStreamGroupDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataResponseOfListOfStreamGroupDto"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "pageNumber",
              "pageSize",
              "totalPageCount",
              "first"
            ],
            "properties": {
              "pageNumber": {
                "type": "integer",
                "format": "int32"
              },
              "pageSize": {
                "type": "integer",
                "format": "int32"
              },
              "totalPageCount": {
                "type": "integer",
                "format": "int32"
              },
              "first": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "DataResponseOfListOfStreamGroupDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/APIResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "data",
              "totalItemCount",
              "count"
            ],
            "properties": {
              "data": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/StreamGroupDto"
                }
              },
              "totalItemCount": {
                "type": "integer",
                "format": "int32"
              },
              "count": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "StreamGroupDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/StreamGroupBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "streamGroupProfiles": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StreamGroupProfileDto"
                }
              },
              "channelCount": {
                "type": "integer",
                "format": "int32"
              },
              "autoSetChannelNumbers": {
                "type": "boolean"
              },
              "ignoreExistingChannelNumbers": {
                "type": "boolean"
              },
              "startingChannelNumber": {
                "type": "integer",
                "format": "int32"
              },
              "shortM3ULink": {
                "type": "string"
              },
              "shortEPGLink": {
                "type": "string"
              },
              "m3ULink": {
                "type": "string"
              },
              "xmlLink": {
                "type": "string"
              },
              "hdhrLink": {
                "type": "string"
              },
              "shortHDHRLink": {
                "type": "string"
              }
            }
          }
        ]
      },
      "StreamGroupProfileDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/StreamGroupProfileLinks"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "shortHDHRLink": {
                "type": "string"
              },
              "shortM3ULink": {
                "type": "string"
              },
              "shortEPGLink": {
                "type": "string"
              }
            }
          }
        ]
      },
      "StreamGroupProfileLinks": {
        "allOf": [
          {
            "$ref": "#/components/schemas/StreamGroupProfile"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "xmlLink": {
                "type": "string"
              },
              "m3ULink": {
                "type": "string"
              },
              "hdhrLink": {
                "type": "string"
              }
            }
          }
        ]
      },
      "StreamGroupProfile": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "streamGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "profileName": {
            "type": "string"
          },
          "outputProfileName": {
            "type": "string"
          },
          "commandProfileName": {
            "type": "string"
          }
        }
      },
      "StreamGroupBase": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "deviceID": {
                "type": "string"
              },
              "isReadOnly": {
                "type": "boolean"
              },
              "showIntros": {
                "type": "integer",
                "format": "int32"
              },
              "isSystem": {
                "type": "boolean"
              },
              "name": {
                "type": "string"
              },
              "groupKey": {
                "type": "string"
              }
            }
          }
        ]
      },
      "BaseEntity": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false
      },
      "AddProfileToStreamGroupRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "streamGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "profileName": {
            "type": "string"
          },
          "outputProfileName": {
            "type": "string"
          },
          "commandProfileName": {
            "type": "string"
          }
        }
      },
      "CreateStreamGroupRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "outputProfileName": {
            "type": "string",
            "nullable": true
          },
          "commandProfileName": {
            "type": "string",
            "nullable": true
          },
          "groupKey": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "DeleteStreamGroupRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "streamGroupId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RemoveStreamGroupProfileRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "streamGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "profileName": {
            "type": "string"
          }
        }
      },
      "UpdateStreamGroupProfileRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "streamGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "profileName": {
            "type": "string"
          },
          "newProfileName": {
            "type": "string"
          },
          "outputProfileName": {
            "type": "string",
            "nullable": true
          },
          "commandProfileName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdateStreamGroupRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "streamGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "groupKey": {
            "type": "string",
            "nullable": true
          },
          "newName": {
            "type": "string",
            "nullable": true
          },
          "deviceID": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ChannelMetric": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "smStreamInfo",
          "channelItemBackLog",
          "clientChannels",
          "clientStreams",
          "metrics",
          "isFailed",
          "name",
          "id",
          "sourceName",
          "logo",
          "videoInfo",
          "totalBytesInBuffer"
        ],
        "properties": {
          "smStreamInfo": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SMStreamInfo"
              }
            ]
          },
          "channelItemBackLog": {
            "type": "integer",
            "format": "int64"
          },
          "clientChannels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientChannelDto"
            }
          },
          "clientStreams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientStreamsDto"
            }
          },
          "metrics": {
            "$ref": "#/components/schemas/StreamHandlerMetrics"
          },
          "isFailed": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "sourceName": {
            "type": "string"
          },
          "logo": {
            "type": "string",
            "nullable": true
          },
          "videoInfo": {
            "type": "string",
            "nullable": true
          },
          "totalBytesInBuffer": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ClientChannelDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "smChannelId",
          "name",
          "logo",
          "clientIPAddress",
          "clientUserAgent",
          "metrics"
        ],
        "properties": {
          "smChannelId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "logo": {
            "type": "string",
            "nullable": true
          },
          "clientIPAddress": {
            "type": "string",
            "nullable": true
          },
          "clientUserAgent": {
            "type": "string",
            "nullable": true
          },
          "metrics": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/StreamHandlerMetrics"
              }
            ]
          }
        }
      },
      "ClientStreamsDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "smStreamId",
          "name",
          "logo",
          "clientIPAddress",
          "clientUserAgent"
        ],
        "properties": {
          "smStreamId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "logo": {
            "type": "string",
            "nullable": true
          },
          "clientIPAddress": {
            "type": "string",
            "nullable": true
          },
          "clientUserAgent": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "VideoInfo": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "key": {
            "type": "string"
          },
          "streamName": {
            "type": "string"
          },
          "streamId": {
            "type": "string"
          },
          "jsonOutput": {
            "type": "string"
          }
        }
      },
      "VideoInfoDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/VideoInfo"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "SMTask": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "isRunning": {
            "type": "boolean"
          },
          "command": {
            "type": "string"
          },
          "queueTS": {
            "type": "string",
            "format": "date-time"
          },
          "startTS": {
            "type": "string",
            "format": "date-time"
          },
          "stopTS": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "SendSMTasksRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "smTasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SMTask"
            }
          }
        }
      },
      "PagedResponseOfSMStreamDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataResponseOfListOfSMStreamDto"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "pageNumber",
              "pageSize",
              "totalPageCount",
              "first"
            ],
            "properties": {
              "pageNumber": {
                "type": "integer",
                "format": "int32"
              },
              "pageSize": {
                "type": "integer",
                "format": "int32"
              },
              "totalPageCount": {
                "type": "integer",
                "format": "int32"
              },
              "first": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "DataResponseOfListOfSMStreamDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/APIResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "data",
              "totalItemCount",
              "count"
            ],
            "properties": {
              "data": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/SMStreamDto"
                }
              },
              "totalItemCount": {
                "type": "integer",
                "format": "int32"
              },
              "count": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "CreateSMStreamRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "channelNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "group": {
            "type": "string",
            "nullable": true
          },
          "logo": {
            "type": "string",
            "nullable": true
          },
          "epgid": {
            "type": "string",
            "nullable": true
          },
          "commandProfileName": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string"
          }
        }
      },
      "DeleteSMStreamRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "smStreamId": {
            "type": "string"
          }
        }
      },
      "SetSMStreamsVisibleByIdRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isHidden": {
            "type": "boolean"
          }
        }
      },
      "ToggleSMStreamsVisibleByIdRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ToggleSMStreamVisibleByIdRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "ToggleSMStreamVisibleByParametersRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "parameters": {
            "$ref": "#/components/schemas/QueryStringParameters"
          }
        }
      },
      "UpdateSMStreamRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "smStreamId": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "channelNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "group": {
            "type": "string",
            "nullable": true
          },
          "logo": {
            "type": "string",
            "nullable": true
          },
          "epgid": {
            "type": "string",
            "nullable": true
          },
          "commandProfileName": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string"
          }
        }
      },
      "SendSMErrorRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "detail": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          }
        }
      },
      "SendSMInfoRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "detail": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          }
        }
      },
      "SendSMMessageRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "message": {
            "$ref": "#/components/schemas/SMMessage"
          }
        }
      },
      "SMMessage": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "severity": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "detail": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SendSMWarnRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "detail": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          }
        }
      },
      "SendSuccessRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "detail": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          }
        }
      },
      "AddSMStreamToSMChannelRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "smChannelId": {
            "type": "integer",
            "format": "int32"
          },
          "smStreamId": {
            "type": "string"
          },
          "rank": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "RemoveSMStreamFromSMChannelRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "smChannelId": {
            "type": "integer",
            "format": "int32"
          },
          "smStreamId": {
            "type": "string"
          }
        }
      },
      "SetSMStreamRanksRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "requests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SMChannelStreamRankRequest"
            }
          }
        }
      },
      "SMChannelStreamRankRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "smChannelId": {
            "type": "integer",
            "format": "int32"
          },
          "smStreamId": {
            "type": "string"
          },
          "rank": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PagedResponseOfSMChannelDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataResponseOfListOfSMChannelDto"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "pageNumber",
              "pageSize",
              "totalPageCount",
              "first"
            ],
            "properties": {
              "pageNumber": {
                "type": "integer",
                "format": "int32"
              },
              "pageSize": {
                "type": "integer",
                "format": "int32"
              },
              "totalPageCount": {
                "type": "integer",
                "format": "int32"
              },
              "first": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "DataResponseOfListOfSMChannelDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/APIResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "data",
              "totalItemCount",
              "count"
            ],
            "properties": {
              "data": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/SMChannelDto"
                }
              },
              "totalItemCount": {
                "type": "integer",
                "format": "int32"
              },
              "count": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "IdNameUrl": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "AutoSetEPGFromParametersRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "parameters": {
            "$ref": "#/components/schemas/QueryStringParameters"
          }
        }
      },
      "AutoSetEPGRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "AutoSetSMChannelNumbersFromParametersRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "streamGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "parameters": {
            "$ref": "#/components/schemas/QueryStringParameters"
          },
          "startingNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "overwriteExisting": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "AutoSetSMChannelNumbersRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "streamGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "smChannelIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "startingNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "overwriteExisting": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "CopySMChannelRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "smChannelId": {
            "type": "integer",
            "format": "int32"
          },
          "newName": {
            "type": "string"
          }
        }
      },
      "CreateMultiViewChannelRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "smsChannelIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "streamGroup": {
            "type": "string",
            "nullable": true
          },
          "channelNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "group": {
            "type": "string",
            "nullable": true
          },
          "epgId": {
            "type": "string",
            "nullable": true
          },
          "logo": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateSMChannelRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "smStreamsIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "commandProfileName": {
            "type": "string",
            "nullable": true
          },
          "clientUserAgent": {
            "type": "string",
            "nullable": true
          },
          "channelNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "timeShift": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "group": {
            "type": "string",
            "nullable": true
          },
          "epgId": {
            "type": "string",
            "nullable": true
          },
          "stationId": {
            "type": "string",
            "nullable": true
          },
          "logo": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateSMChannelsFromStreamParametersRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "parameters": {
            "$ref": "#/components/schemas/QueryStringParameters"
          },
          "defaultStreamGroupName": {
            "type": "string",
            "nullable": true
          },
          "m3UFileId": {
            "type": "integer",
            "format": "int32"
          },
          "streamGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "CreateSMChannelsFromStreamsRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "streamIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "streamGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "DeleteSMChannelRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "smChannelId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DeleteSMChannelsFromParametersRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "parameters": {
            "$ref": "#/components/schemas/QueryStringParameters"
          }
        }
      },
      "DeleteSMChannelsRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "smChannelIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "SetSMChannelEPGIdRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "smChannelId": {
            "type": "integer",
            "format": "int32"
          },
          "epgId": {
            "type": "string"
          }
        }
      },
      "SetSMChannelGroupRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "smChannelId": {
            "type": "integer",
            "format": "int32"
          },
          "group": {
            "type": "string"
          }
        }
      },
      "SetSMChannelLogoRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "smChannelId": {
            "type": "integer",
            "format": "int32"
          },
          "logo": {
            "type": "string"
          }
        }
      },
      "SetSMChannelNameRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "smChannelId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "SetSMChannelNumberRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "smChannelId": {
            "type": "integer",
            "format": "int32"
          },
          "channelNumber": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SetSMChannelsGroupFromParametersRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "parameters": {
            "$ref": "#/components/schemas/QueryStringParameters"
          },
          "group": {
            "type": "string"
          }
        }
      },
      "SetSMChannelsGroupRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "smChannelIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "group": {
            "type": "string"
          }
        }
      },
      "SetSMChannelsLogoFromEPGFromParametersRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "parameters": {
            "$ref": "#/components/schemas/QueryStringParameters"
          }
        }
      },
      "SetSMChannelsLogoFromEPGRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "SetSMChannelsCommandProfileNameFromParametersRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "parameters": {
            "$ref": "#/components/schemas/QueryStringParameters"
          },
          "commandProfileName": {
            "type": "string"
          }
        }
      },
      "SetSMChannelsCommandProfileNameRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "smChannelIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "commandProfileName": {
            "type": "string"
          }
        }
      },
      "SetSMChannelCommandProfileNameRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "smChannelId": {
            "type": "integer",
            "format": "int32"
          },
          "commandProfileName": {
            "type": "string"
          }
        }
      },
      "ToggleSMChannelsVisibleByIdRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "ToggleSMChannelVisibleByIdRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ToggleSMChannelVisibleByParametersRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "parameters": {
            "$ref": "#/components/schemas/QueryStringParameters"
          }
        }
      },
      "UpdateMultiViewChannelRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "smChannelIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "channelNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "group": {
            "type": "string",
            "nullable": true
          },
          "epgId": {
            "type": "string",
            "nullable": true
          },
          "logo": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdateSMChannelRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "clientUserAgent": {
            "type": "string",
            "nullable": true
          },
          "smStreamsIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "commandProfileName": {
            "type": "string",
            "nullable": true
          },
          "channelNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "timeShift": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "group": {
            "type": "string",
            "nullable": true
          },
          "epgId": {
            "type": "string",
            "nullable": true
          },
          "logo": {
            "type": "string",
            "nullable": true
          },
          "stationId": {
            "type": "string",
            "nullable": true
          },
          "videoStreamHandler": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoStreamHandlers"
              }
            ]
          }
        }
      },
      "VideoStreamHandlers": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "SystemDefault",
          "None",
          "Loop"
        ],
        "enum": [
          0,
          1,
          2
        ]
      },
      "AddSMChannelToSMChannelRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "parentSMChannelId": {
            "type": "integer",
            "format": "int32"
          },
          "childSMChannelId": {
            "type": "integer",
            "format": "int32"
          },
          "rank": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "RemoveSMChannelFromSMChannelRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "parentSMChannelId": {
            "type": "integer",
            "format": "int32"
          },
          "childSMChannelId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SetSMChannelRanksRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "requests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SMChannelChannelRankRequest"
            }
          }
        }
      },
      "SMChannelChannelRankRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "parentSMChannelId": {
            "type": "integer",
            "format": "int32"
          },
          "childSMChannelId": {
            "type": "integer",
            "format": "int32"
          },
          "rank": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SettingDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/StreamSettings"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "sdSettings": {
                "$ref": "#/components/schemas/SDSettings"
              },
              "release": {
                "type": "string"
              },
              "version": {
                "type": "string"
              },
              "isDebug": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "SDSettings": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "maxSubscribedLineups": {
            "type": "integer",
            "format": "int32"
          },
          "alternateSEFormat": {
            "type": "boolean"
          },
          "alternateLogoStyle": {
            "type": "string"
          },
          "appendEpisodeDesc": {
            "type": "boolean"
          },
          "artworkSize": {
            "type": "string"
          },
          "excludeCastAndCrew": {
            "type": "boolean"
          },
          "preferredLogoStyle": {
            "type": "string"
          },
          "prefixEpisodeDescription": {
            "type": "boolean"
          },
          "prefixEpisodeTitle": {
            "type": "boolean"
          },
          "sdEnabled": {
            "type": "boolean"
          },
          "sdepgDays": {
            "type": "integer",
            "format": "int32"
          },
          "sdCountry": {
            "type": "string"
          },
          "sdPassword": {
            "type": "string"
          },
          "sdPostalCode": {
            "type": "string"
          },
          "sdStationIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StationIdLineup"
            }
          },
          "headendsToView": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HeadendToView"
            }
          },
          "sdUserName": {
            "type": "string"
          },
          "seasonEventImages": {
            "type": "boolean"
          },
          "seriesPosterArt": {
            "type": "boolean"
          },
          "seriesPosterAspect": {
            "type": "string"
          },
          "seriesWsArt": {
            "type": "boolean"
          },
          "xmltvAddFillerData": {
            "type": "boolean"
          },
          "xmltvFillerProgramLength": {
            "type": "integer",
            "format": "int32"
          },
          "xmltvExtendedInfoInTitleDescriptions": {
            "type": "boolean"
          },
          "xmltvIncludeChannelNumbers": {
            "type": "boolean"
          },
          "xmltvSingleImage": {
            "type": "boolean"
          }
        }
      },
      "StationIdLineup": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "lineup": {
            "type": "string"
          },
          "stationId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "HeadendToView": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          }
        }
      },
      "StreamSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseSettings"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "defaultCommandProfileName": {
                "type": "string"
              },
              "defaultOutputProfileName": {
                "type": "string"
              },
              "clientReadTimeOutSeconds": {
                "type": "number",
                "format": "double"
              },
              "ffmPegExecutable": {
                "type": "string"
              },
              "ffProbeExecutable": {
                "type": "string"
              }
            }
          }
        ]
      },
      "BaseSettings": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "adminPassword": {
            "type": "string"
          },
          "adminUserName": {
            "type": "string"
          },
          "authenticationMethod": {
            "type": "string"
          },
          "autoSetEPG": {
            "type": "boolean"
          },
          "backupEnabled": {
            "type": "boolean"
          },
          "backupInterval": {
            "type": "integer",
            "format": "int32"
          },
          "backupVersionsToKeep": {
            "type": "integer",
            "format": "int32"
          },
          "cleanURLs": {
            "type": "boolean"
          },
          "clientUserAgent": {
            "type": "string"
          },
          "defaultCompression": {
            "type": "string"
          },
          "defaultLogo": {
            "type": "string"
          },
          "deviceID": {
            "type": "string"
          },
          "dummyRegex": {
            "type": "string"
          },
          "enableDBDebug": {
            "type": "boolean"
          },
          "enableSSL": {
            "type": "boolean"
          },
          "globalStreamLimit": {
            "type": "integer",
            "format": "int32"
          },
          "iconCacheExpirationDays": {
            "type": "integer",
            "format": "int32"
          },
          "logoCache": {
            "type": "string"
          },
          "m3U8OutPutProfile": {
            "type": "string"
          },
          "maxConcurrentDownloads": {
            "type": "integer",
            "format": "int32"
          },
          "maxConnectRetry": {
            "type": "integer",
            "format": "int32"
          },
          "maxConnectRetryTimeMS": {
            "type": "integer",
            "format": "int32"
          },
          "maxLogFileSizeMB": {
            "type": "integer",
            "format": "int32"
          },
          "maxLogFiles": {
            "type": "integer",
            "format": "int32"
          },
          "maxStreamReStart": {
            "type": "integer",
            "format": "int32"
          },
          "nameRegex": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "prettyEPG": {
            "type": "boolean"
          },
          "showClientHostNames": {
            "type": "boolean"
          },
          "showMessageVideos": {
            "type": "boolean"
          },
          "showIntros": {
            "type": "string"
          },
          "sslCertPassword": {
            "type": "string"
          },
          "sslCertPath": {
            "type": "string"
          },
          "shutDownDelay": {
            "type": "integer",
            "format": "int32"
          },
          "uiFolder": {
            "type": "string"
          },
          "urlBase": {
            "type": "string"
          },
          "videoStreamAlwaysUseEPGLogo": {
            "type": "boolean"
          }
        }
      },
      "UpdateSettingResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "needsLogOut": {
            "type": "boolean"
          },
          "settings": {
            "$ref": "#/components/schemas/SettingDto"
          }
        }
      },
      "UpdateSettingRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "parameters": {
            "$ref": "#/components/schemas/UpdateSettingParameters"
          }
        }
      },
      "UpdateSettingParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "autoSetEPG": {
            "type": "boolean",
            "nullable": true
          },
          "backupEnabled": {
            "type": "boolean",
            "nullable": true
          },
          "backupVersionsToKeep": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "backupInterval": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sdSettings": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SDSettingsRequest"
              }
            ]
          },
          "showClientHostNames": {
            "type": "boolean",
            "nullable": true
          },
          "iconCacheExpirationDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "defaultCompression": {
            "type": "string",
            "nullable": true
          },
          "m3U8OutPutProfile": {
            "type": "string",
            "nullable": true
          },
          "adminPassword": {
            "type": "string",
            "nullable": true
          },
          "adminUserName": {
            "type": "string",
            "nullable": true
          },
          "clientReadTimeOutSeconds": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "authenticationMethod": {
            "type": "string",
            "nullable": true
          },
          "logoCache": {
            "type": "string",
            "nullable": true
          },
          "cleanURLs": {
            "type": "boolean",
            "nullable": true
          },
          "clientUserAgent": {
            "type": "string",
            "nullable": true
          },
          "deviceID": {
            "type": "string",
            "nullable": true
          },
          "dummyRegex": {
            "type": "string",
            "nullable": true
          },
          "enableSSL": {
            "type": "boolean",
            "nullable": true
          },
          "shutDownDelay": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "showMessageVideos": {
            "type": "boolean",
            "nullable": true
          },
          "ffmPegExecutable": {
            "type": "string",
            "nullable": true
          },
          "ffProbeExecutable": {
            "type": "string",
            "nullable": true
          },
          "globalStreamLimit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "prettyEPG": {
            "type": "boolean",
            "nullable": true
          },
          "showIntros": {
            "type": "string",
            "nullable": true
          },
          "maxConnectRetry": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxConnectRetryTimeMS": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sslCertPassword": {
            "type": "string",
            "nullable": true
          },
          "sslCertPath": {
            "type": "string",
            "nullable": true
          },
          "defaultOutputProfileName": {
            "type": "string",
            "nullable": true
          },
          "defaultCommandProfileName": {
            "type": "string",
            "nullable": true
          },
          "maxLogFiles": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxLogFileSizeMB": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "nameRegex": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SDSettingsRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "preferredLogoStyle": {
            "type": "string",
            "nullable": true
          },
          "alternateLogoStyle": {
            "type": "string",
            "nullable": true
          },
          "seriesPosterArt": {
            "type": "boolean",
            "nullable": true
          },
          "seriesWsArt": {
            "type": "boolean",
            "nullable": true
          },
          "seriesPosterAspect": {
            "type": "string",
            "nullable": true
          },
          "artworkSize": {
            "type": "string",
            "nullable": true
          },
          "excludeCastAndCrew": {
            "type": "boolean",
            "nullable": true
          },
          "alternateSEFormat": {
            "type": "boolean",
            "nullable": true
          },
          "prefixEpisodeDescription": {
            "type": "boolean",
            "nullable": true
          },
          "prefixEpisodeTitle": {
            "type": "boolean",
            "nullable": true
          },
          "appendEpisodeDesc": {
            "type": "boolean",
            "nullable": true
          },
          "sdepgDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sdEnabled": {
            "type": "boolean",
            "nullable": true
          },
          "sdUserName": {
            "type": "string",
            "nullable": true
          },
          "sdCountry": {
            "type": "string",
            "nullable": true
          },
          "sdPassword": {
            "type": "string",
            "nullable": true
          },
          "sdPostalCode": {
            "type": "string",
            "nullable": true
          },
          "headendsToView": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/HeadendToView"
            }
          },
          "sdStationIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/StationIdLineup"
            }
          },
          "seasonEventImages": {
            "type": "boolean",
            "nullable": true
          },
          "xmltvAddFillerData": {
            "type": "boolean",
            "nullable": true
          },
          "xmltvFillerProgramLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxSubscribedLineups": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "xmltvIncludeChannelNumbers": {
            "type": "boolean",
            "nullable": true
          },
          "xmltvExtendedInfoInTitleDescriptions": {
            "type": "boolean",
            "nullable": true
          },
          "xmltvSingleImage": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "CountryData": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "countries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Country"
            }
          }
        }
      },
      "Country": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "fullName": {
            "type": "string"
          },
          "shortName": {
            "type": "string"
          },
          "postalCodeExample": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "onePostalCode": {
            "type": "boolean"
          }
        }
      },
      "HeadendDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "headendId": {
            "type": "string"
          },
          "lineup": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "transport": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "postCode": {
            "type": "string"
          }
        }
      },
      "LineupPreviewChannel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "channel": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "callsign": {
            "type": "string"
          },
          "affiliate": {
            "type": "string"
          }
        }
      },
      "StationChannelName": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "channel": {
            "type": "string"
          },
          "channelName": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          }
        }
      },
      "StationPreview": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "logo": {
            "$ref": "#/components/schemas/Logo"
          },
          "affiliate": {
            "type": "string"
          },
          "callsign": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "lineup": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "stationId": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          }
        }
      },
      "Logo": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "URL": {
            "type": "string"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "md5": {
            "type": "string"
          }
        }
      },
      "SubscribedLineup": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "lineup": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "transport": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "uri": {
            "type": "string"
          },
          "isDeleted": {
            "type": "boolean"
          }
        }
      },
      "AddHeadendToViewRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "headendId": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "postal": {
            "type": "string"
          }
        }
      },
      "AddLineupRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "lineup": {
            "type": "string"
          }
        }
      },
      "AddStationRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "requests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StationRequest"
            }
          }
        }
      },
      "StationRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "stationId": {
            "type": "string"
          },
          "lineup": {
            "type": "string"
          }
        }
      },
      "RemoveHeadendToViewRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "headendId": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "postal": {
            "type": "string"
          }
        }
      },
      "RemoveLineupRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "lineup": {
            "type": "string"
          }
        }
      },
      "RemoveStationRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "requests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StationRequest"
            }
          }
        }
      },
      "SetStationsRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "requests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StationRequest"
            }
          }
        }
      },
      "OutputProfileDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OutputProfile"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "profileName": {
                "type": "string"
              }
            }
          }
        ]
      },
      "OutputProfile": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "isReadOnly": {
            "type": "boolean"
          },
          "enableIcon": {
            "type": "boolean"
          },
          "enableGroupTitle": {
            "type": "boolean"
          },
          "enableChannelNumber": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "group": {
            "type": "string"
          }
        }
      },
      "AddCommandProfileRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "profileName": {
            "type": "string"
          },
          "command": {
            "type": "string"
          },
          "parameters": {
            "type": "string"
          }
        }
      },
      "AddOutputProfileRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "outputProfileDto": {
            "$ref": "#/components/schemas/OutputProfileDto"
          }
        }
      },
      "RemoveCommandProfileRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "profileName": {
            "type": "string"
          }
        }
      },
      "RemoveOutputProfileRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "UpdateCommandProfileRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "profileName": {
            "type": "string"
          },
          "newProfileName": {
            "type": "string",
            "nullable": true
          },
          "command": {
            "type": "string",
            "nullable": true
          },
          "parameters": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdateOutputProfileRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OutputProfileRequest"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "profileName": {
                "type": "string"
              },
              "newName": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "OutputProfileRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "enableIcon": {
            "type": "boolean",
            "nullable": true
          },
          "enableGroupTitle": {
            "type": "boolean",
            "nullable": true
          },
          "enableChannelNumber": {
            "type": "boolean",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "group": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "M3UFileDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseFileDto"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "m3U8OutPutProfile",
              "m3UName",
              "m3UKey",
              "syncChannels",
              "vodTags",
              "defaultStreamGroupName",
              "maxStreamCount",
              "streamCount",
              "startingChannelNumber",
              "autoSetChannelNumbers"
            ],
            "properties": {
              "m3U8OutPutProfile": {
                "type": "string"
              },
              "m3UName": {
                "$ref": "#/components/schemas/M3UField"
              },
              "m3UKey": {
                "$ref": "#/components/schemas/M3UKey"
              },
              "syncChannels": {
                "type": "boolean"
              },
              "vodTags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "defaultStreamGroupName": {
                "type": "string",
                "nullable": true
              },
              "maxStreamCount": {
                "type": "integer",
                "format": "int32"
              },
              "streamCount": {
                "type": "integer",
                "format": "int32"
              },
              "startingChannelNumber": {
                "type": "integer",
                "format": "int32"
              },
              "autoSetChannelNumbers": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "M3UField": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "ChannelId",
          "ChannelName",
          "ChannelNumber",
          "Group",
          "Name",
          "TvgID",
          "TvgName"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ]
      },
      "M3UKey": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "URL",
          "CUID",
          "ChannelId",
          "TvgID",
          "TvgName",
          "TvgName_TvgID",
          "Name",
          "Name_TvgID"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ]
      },
      "BaseFileDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "source",
          "autoUpdate",
          "description",
          "downloadErrors",
          "hoursToUpdate",
          "id",
          "lastDownloadAttempt",
          "lastDownloaded",
          "name",
          "needsUpdate",
          "url"
        ],
        "properties": {
          "source": {
            "type": "string"
          },
          "autoUpdate": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "downloadErrors": {
            "type": "integer",
            "format": "int32"
          },
          "hoursToUpdate": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "lastDownloadAttempt": {
            "type": "string",
            "format": "date-time"
          },
          "lastDownloaded": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "needsUpdate": {
            "type": "boolean"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "PagedResponseOfM3UFileDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataResponseOfListOfM3UFileDto"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "pageNumber",
              "pageSize",
              "totalPageCount",
              "first"
            ],
            "properties": {
              "pageNumber": {
                "type": "integer",
                "format": "int32"
              },
              "pageSize": {
                "type": "integer",
                "format": "int32"
              },
              "totalPageCount": {
                "type": "integer",
                "format": "int32"
              },
              "first": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "DataResponseOfListOfM3UFileDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/APIResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "data",
              "totalItemCount",
              "count"
            ],
            "properties": {
              "data": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/M3UFileDto"
                }
              },
              "totalItemCount": {
                "type": "integer",
                "format": "int32"
              },
              "count": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "CreateM3UFileRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "maxStreamCount": {
            "type": "integer",
            "format": "int32"
          },
          "m3U8OutPutProfile": {
            "type": "string",
            "nullable": true
          },
          "m3UKey": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/M3UKey"
              }
            ]
          },
          "m3UName": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/M3UField"
              }
            ]
          },
          "defaultStreamGroupName": {
            "type": "string",
            "nullable": true
          },
          "urlSource": {
            "type": "string",
            "nullable": true
          },
          "syncChannels": {
            "type": "boolean",
            "nullable": true
          },
          "hoursToUpdate": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startingChannelNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "autoSetChannelNumbers": {
            "type": "boolean",
            "nullable": true
          },
          "vodTags": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "DeleteM3UFileRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "deleteFile": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProcessM3UFileRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "m3UFileId": {
            "type": "integer",
            "format": "int32"
          },
          "forceRun": {
            "type": "boolean"
          }
        }
      },
      "RefreshM3UFileRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "forceRun": {
            "type": "boolean"
          }
        }
      },
      "SyncChannelsRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "m3UFileId": {
            "type": "integer",
            "format": "int32"
          },
          "group": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdateM3UFileRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "maxStreamCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startingChannelNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "defaultStreamGroupName": {
            "type": "string",
            "nullable": true
          },
          "syncChannels": {
            "type": "boolean",
            "nullable": true
          },
          "vodTags": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "autoSetChannelNumbers": {
            "type": "boolean",
            "nullable": true
          },
          "autoUpdate": {
            "type": "boolean",
            "nullable": true
          },
          "hoursToUpdate": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "m3U8OutPutProfile": {
            "type": "string",
            "nullable": true
          },
          "m3UName": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/M3UField"
              }
            ]
          }
        }
      },
      "LogoFileDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "name",
          "source"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "source": {
            "type": "string"
          }
        }
      },
      "SDSystemStatus": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "isSystemReady": {
            "type": "boolean"
          }
        }
      },
      "SetTestTaskRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "delayInSeconds": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "EPGFilePreviewDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "channelLogo": {
            "type": "string"
          },
          "channelNumber": {
            "type": "string"
          },
          "channelName": {
            "type": "string"
          }
        }
      },
      "EPGFileDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseFileDto"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "timeShift",
              "epgNumber",
              "color",
              "channelCount",
              "epgStartDate",
              "epgStopDate",
              "programmeCount"
            ],
            "properties": {
              "timeShift": {
                "type": "integer",
                "format": "int32"
              },
              "epgNumber": {
                "type": "integer",
                "format": "int32"
              },
              "color": {
                "type": "string"
              },
              "channelCount": {
                "type": "integer",
                "format": "int32"
              },
              "epgStartDate": {
                "type": "string",
                "format": "date-time"
              },
              "epgStopDate": {
                "type": "string",
                "format": "date-time"
              },
              "programmeCount": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "PagedResponseOfEPGFileDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataResponseOfListOfEPGFileDto"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "pageNumber",
              "pageSize",
              "totalPageCount",
              "first"
            ],
            "properties": {
              "pageNumber": {
                "type": "integer",
                "format": "int32"
              },
              "pageSize": {
                "type": "integer",
                "format": "int32"
              },
              "totalPageCount": {
                "type": "integer",
                "format": "int32"
              },
              "first": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "DataResponseOfListOfEPGFileDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/APIResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "data",
              "totalItemCount",
              "count"
            ],
            "properties": {
              "data": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/EPGFileDto"
                }
              },
              "totalItemCount": {
                "type": "integer",
                "format": "int32"
              },
              "count": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "CreateEPGFileRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "fileName": {
            "type": "string"
          },
          "epgNumber": {
            "type": "integer",
            "format": "int32"
          },
          "timeShift": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hoursToUpdate": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "urlSource": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "DeleteEPGFileRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "deleteFile": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProcessEPGFileRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RefreshEPGFileRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdateEPGFileRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "epgNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "timeShift": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "autoUpdate": {
            "type": "boolean",
            "nullable": true
          },
          "hoursToUpdate": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "EPGColorDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "epgNumber": {
            "type": "integer",
            "format": "int32"
          },
          "stationId": {
            "type": "string"
          },
          "color": {
            "type": "string"
          }
        }
      },
      "CustomPlayList": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "folderNfo": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Movie"
              }
            ]
          },
          "customStreamNfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomStreamNfo"
            }
          }
        }
      },
      "Movie": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "title": {
            "type": "string"
          },
          "originaltitle": {
            "type": "string"
          },
          "sorttitle": {
            "type": "string"
          },
          "ratings": {
            "$ref": "#/components/schemas/Ratings"
          },
          "rating": {
            "type": "string"
          },
          "criticrating": {
            "type": "string"
          },
          "userrating": {
            "type": "string"
          },
          "top250": {
            "type": "string"
          },
          "outline": {
            "type": "string"
          },
          "plot": {
            "type": "string"
          },
          "tagline": {
            "type": "string"
          },
          "runtime": {
            "type": "integer",
            "format": "int32"
          },
          "thumb": {
            "$ref": "#/components/schemas/Thumb"
          },
          "fanart": {
            "$ref": "#/components/schemas/Fanart"
          },
          "mpaa": {
            "type": "string"
          },
          "playcount": {
            "type": "string"
          },
          "lastplayed": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "uniqueids": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Uniqueid"
            }
          },
          "genres": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "country": {
            "type": "string"
          },
          "set": {
            "$ref": "#/components/schemas/Set"
          },
          "status": {
            "type": "string"
          },
          "premiered": {
            "type": "string"
          },
          "year": {
            "type": "string"
          },
          "studio": {
            "type": "string"
          },
          "watched": {
            "type": "string"
          },
          "fileinfo": {
            "$ref": "#/components/schemas/Fileinfo"
          },
          "actors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Actor"
            }
          },
          "credits": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "directors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "trailers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "artworks": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Ratings": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "rating": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Rating"
            }
          }
        }
      },
      "Rating": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "string"
          },
          "votes": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "max": {
            "type": "string"
          },
          "default": {
            "type": "string"
          }
        }
      },
      "Thumb": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "aspect": {
            "type": "string"
          },
          "preview": {
            "type": "string"
          },
          "text": {
            "type": "string"
          }
        }
      },
      "Fanart": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "thumb": {
            "$ref": "#/components/schemas/Thumb"
          }
        }
      },
      "Uniqueid": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string"
          },
          "default": {
            "type": "string"
          },
          "text": {
            "type": "string"
          }
        }
      },
      "Set": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "overview": {
            "type": "string"
          }
        }
      },
      "Fileinfo": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "streamdetails": {
            "$ref": "#/components/schemas/Streamdetails"
          }
        }
      },
      "Streamdetails": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "video": {
            "$ref": "#/components/schemas/Video"
          },
          "audio": {
            "$ref": "#/components/schemas/Audio"
          },
          "subtitle": {
            "$ref": "#/components/schemas/Subtitle"
          }
        }
      },
      "Video": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "aspect": {
            "type": "string"
          },
          "bitrate": {
            "type": "string"
          },
          "codec": {
            "type": "string"
          },
          "framerate": {
            "type": "string"
          },
          "height": {
            "type": "string"
          },
          "scantype": {
            "type": "string"
          },
          "width": {
            "type": "string"
          },
          "duration": {
            "type": "string"
          },
          "durationinseconds": {
            "type": "string"
          }
        }
      },
      "Audio": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "bitrate": {
            "type": "string"
          },
          "channels": {
            "type": "string"
          },
          "codec": {
            "type": "string"
          },
          "language": {
            "type": "string"
          }
        }
      },
      "Subtitle": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "language": {
            "type": "string"
          }
        }
      },
      "Actor": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "order": {
            "type": "string"
          },
          "thumb": {
            "type": "string"
          }
        }
      },
      "CustomStreamNfo": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "videoFileName": {
            "type": "string"
          },
          "movie": {
            "$ref": "#/components/schemas/Movie"
          }
        }
      },
      "ChannelGroupDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ChannelGroup"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "ChannelGroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "isSystem": {
                "type": "boolean"
              },
              "isHidden": {
                "type": "boolean"
              },
              "isReadOnly": {
                "type": "boolean"
              },
              "name": {
                "type": "string"
              },
              "regexMatch": {
                "type": "string"
              },
              "activeCount": {
                "type": "integer",
                "format": "int32"
              },
              "totalCount": {
                "type": "integer",
                "format": "int32"
              },
              "hiddenCount": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "PagedResponseOfChannelGroupDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataResponseOfListOfChannelGroupDto"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "pageNumber",
              "pageSize",
              "totalPageCount",
              "first"
            ],
            "properties": {
              "pageNumber": {
                "type": "integer",
                "format": "int32"
              },
              "pageSize": {
                "type": "integer",
                "format": "int32"
              },
              "totalPageCount": {
                "type": "integer",
                "format": "int32"
              },
              "first": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "DataResponseOfListOfChannelGroupDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/APIResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "data",
              "totalItemCount",
              "count"
            ],
            "properties": {
              "data": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ChannelGroupDto"
                }
              },
              "totalItemCount": {
                "type": "integer",
                "format": "int32"
              },
              "count": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "CreateChannelGroupRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "groupName": {
            "type": "string"
          },
          "isReadOnly": {
            "type": "boolean"
          }
        }
      },
      "DeleteAllChannelGroupsFromParametersRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "parameters": {
            "$ref": "#/components/schemas/QueryStringParameters"
          }
        }
      },
      "DeleteChannelGroupRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "channelGroupId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DeleteChannelGroupsRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "channelGroupIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "UpdateChannelGroupRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "channelGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "newGroupName": {
            "type": "string",
            "nullable": true
          },
          "isHidden": {
            "type": "boolean",
            "nullable": true
          },
          "toggleVisibility": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "UpdateChannelGroupsRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "updateChannelGroupRequests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateChannelGroupRequest"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "apikey": {
        "type": "apiKey",
        "name": "x-api-key",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "apikey": []
    }
  ]
}