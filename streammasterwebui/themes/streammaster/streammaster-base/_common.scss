.sm-text-color {
    color: $streamMasterColor;
}

.multiselectcolumn {}


.p-multiselect-trigger {
    width: 1rem;
    padding-right: 0.2rem;
}

.p-multiselect-label,
.p-accordion .p-accordion-header .p-accordion-header-link {
    @include datatable-text-style;
}

.p-multiselect-label.p-multiselect-items-label {
    padding: 0;
}

.tag-editor {
    background: var(--surface-ground);
    height: $input-height;
}

.p-chips-input-token {
    background: var(--surface-ground);
    border-radius: $borderRadius;
    width: 100%;
}


.smfileupload {
    @include standard-border;
    background: var(--surface-overlay);
    padding: 0.5rem;

    .p-inputtext {
        @include input-border;
        height: $input-height;
        background: var(--surface-ground);
    }

    height: 30vh;
}

.text-right {
    .p-inputtext {
        width: unset;
        max-width: unset;
        text-align: right;
    }
}

.smfileupload-header {
    background: var(--surface-overlay);
    border-style: solid;
    border-color: var(--surface-100);
    border-top-width: 0px;
    border-left-width: 0px;
    border-right-width: 0px;
    border-bottom-width: 2px;
    border-radius: $borderRadius;
    // margin-bottom: 0.5rem;
    padding: 0.5rem;
}

.smfileupload-panel {
    background: $shade900;
    border: $inputBorder-size solid $inputHoverBorderColor;
    border-radius: $borderRadius;
}


.sourceOrFileDialog-toggle {
    .p-button.p-component {
        padding: 0 !important;
        padding-right: 0.6rem !important;
        padding-left: 0.6rem !important;
        width: $gridItem-width !important;
    }
}

.sourceOrFileDialog {


    .p-inputgroup {
        margin-top: 1rem;
    }

    .sourceOrFileDialog-url {
        padding: unset;
        margin: unset;
        border: unset;
        border-radius: unset;
        height: unset;
        max-height: unset;
        padding: .78rem;
        border: 2px solid var(--surface-100);
    }

    .p-progressbar {
        height: $datatable-row-height;
        border-radius: 0;
    }

    .p-progressbar-value {
        border-left: none;
        border-right: none;
    }

    .p-inputtext {
        height: $input-height;
    }
}

.filesEditor {
    padding: 0rem;

    .header {
        background-color: #0c243c;
        height: $datatable-row-height;
    }

    .p-button {
        height: $input-height;
        width: $input-height;
    }

}

.p-dropdown-panel {
    .p-dropdown-filter {
        height: $datatable-row-height;
    }

    .p-dropdown-header {
        border-bottom: 2px solid var(--surface-100);
    }

    .p-dropdown-footer {
        border-top: 2px solid var(--surface-100);
    }

    .p-inputtext {
        height: $datatable-row-height;
        max-height: $datatable-row-height;

    }

}

.iconselector {
    // &.p-dropdown {
    //     background-color: transparent;

    //     &.p-component.p-inputwrapper.p-inputwrapper-filled {
    //         background-color: transparent;
    //         border: none;
    //         align-items: center;
    //         justify-content: center;
    //     }


    // }

    &.p-progress-spinner {
        align-items: center;
        justify-content: center;
        width: $datatable-row-height;
        height: $datatable-row-height;
        padding: 0;
        margin: 0;
    }

    .p-progress-spinner {
        width: $input-height;
        height: $input-height;
    }

}

.iconselector-panel {
    // max-width: 80%;
}

.p-dialog-mask {
    &.p-dialog-top-right {
        padding-bottom: 5%;
    }
}

.p-inputgroup {
    height: $datatable-row-height;
    padding: 0;
    margin: 0;
}

.stringeditorbody {
    padding-left: 0.5rem;
    padding-right: 0.5rem;


    .save {
        border-color: $input-save-color !important;

        &:enabled:hover {
            border-color: $input-save-color;
        }
    }

    .filter {
        border-width: 0.1rem;
        border-color: $inputHoverBorderColor;

    }
}

.stringeditorbody-inputtext {
    width: 100% !important;
}

.autoUpdate {
    .p-inputtext {
        max-width: 6.4rem;
    }
}

.numbereditorbody {
    padding-top: $input-padding*2;
    padding-left: 0.1rem;
    padding-right: 0.1rem;

    .save {
        .p-inputtext {
            border-color: $input-save-color !important;

            &:enabled:hover {
                border-color: $input-save-color;
            }
        }
    }
}

.listTemplate-gridItem-container {
    background-color: var(--surface-card);
    border-width: 2px;
    border-color: var(--surface-border);
    border-radius: var(--border-radius);
    border-style: solid;
    height: $gridItem-height;
    width: $gridItem-width;
    max-height: $gridItem-height;
    max-width: $gridItem-width;
    margin: $gridItem-margin;

    &.selected {
        border: 2px solid $streamMasterColor;
    }
}

.listTemplate-gridItem-container button {
    align-items: center;
    justify-content: center;
    background-color: var(--surface-card);
    border-width: 0px;
    border-color: transparent;
    padding: 0;
    margin: 0;

    height: 100%;
    width: 100%;
}

.listTemplate-gridItem {
    display: flex;
    align-items: center;
    justify-content: center;
}

.listTemplate-gridItem img {
    max-height: $gridItem-image-height;
    max-width: $gridItem-image-width;
    object-fit: contain;
}

.listTemplate-gridItem-name,
.sm-column,
.sm-col-header,
.sm-col-header-left,
.sm-col-header-right {
    @include datatable-text-style(); // Use true for nowrap, false to allow wrapping
}

.listTemplate-gridItem-name {
    max-width: $gridItem-width;
}

.sm-col-header-center {
    text-align: center;
}

.sm-col-header-left {
    text-align: left;
}

.sm-col-header-right {
    text-align: right;
}

.sm-col-header-wrap {
    @extend .sm-col-header;
    @include text-wrap();
    white-space: normal;
}

.sm-col-header-left-wrap {
    @include text-wrap();
    @extend .sm-col-header-left;
    white-space: normal;
}

.sm-col-header-right-wrap {
    @include text-wrap();
    @extend .sm-col-header-right;
    white-space: normal;
}

.no-text {
    color: transparent;
}

.smbutton-label {
    height: $input-height;
    padding-bottom: $input-padding;
    padding-top: $input-padding;
    padding-left: $input-padding*4;
    padding-right: $input-padding*4;
    margin: 0;

    font-size: $common-font-size;

    .p-button-icon {
        font-size: $common-font-size;
    }

    .p-checkbox {
        font-size: $common-font-size;
    }
}

.smbutton {
    @extend .smbutton-label;
    width: $input-height;
}

.sm-expander {
    .p-row-toggler {
        max-height: $input-height;
    }
}

.p-datatable-thead {
    padding: 0;
}

.p-inputnumber-button-group {
    height: $input-height;

}

// .modal {
//     // position: fixed;
//     // top: 0;
//     // left: 0;
//     // width: 100%;
//     // height: 100%;
//     background: #00000099;
// }

// .modal-main {
//     position: absolute;
//     background: transparent;
//     width: 35rem;
//     height: auto;
//     top: 10%;
//     right: 10%;
//     // transform: translate(-50%, -50%);
//     display: flex;
//     flex-direction: column;
//     align-items: center;
//     border-radius: 20px;
// }

.modal.display-block {
    display: block;
}

.modal.display-none {
    display: none;
}